$Version=2$
gljournal_edit "widget/component-decl"
    {
    width=778; height=525;

    ledger "widget/parameter" { type=string; default=null; allowchars="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"; }

    batchwin "widget/parameter" { type=object; }

    GotoBatch "widget/component-decl-action" { }
    GotoBatch_cn "widget/connector"
	{
	event="GotoBatch";
	target=batch_osrc;
	action="QueryParam";
	a_batch_number = runclient(:Batch);
	}

    bpwin "widget/component"
	{
	width=748; height=515; x=0; y=0;
	mode=static;
	path="/apps/kardia/modules/gl/batch_post_window.cmp";
	toplevel = yes;

	posted_cn "widget/connector"
	    {
	    event=Posted;
	    target=trx_osrc;
	    action=Refresh;
	    }

	done_cn "widget/connector"
	    {
	    event=Done;
	    target=bpwin;
	    action=Close;
	    }
	}

    glj_summary "widget/component"
	{
	width=748; height=515; x=0; y=0;
	mode=static;
	path="/apps/kardia/modules/gl/glj_summary.cmp";
	toplevel = yes;
	batch_osrc = batch_osrc;
	}

    ledger_osrc "widget/osrc"
	{
	sql = runserver("select * from /apps/kardia/data/Kardia_DB/a_ledger/rows where :a_ledger_number = " + quote(:this:ledger));
	baseobj = "/apps/kardia/data/Kardia_DB/a_ledger/rows";
	replicasize=10;
	readahead=5;
	autoquery = onload;
	}

    batch_osrc "widget/osrc"
	{
	sql = "set rowcount 1 select * from /apps/kardia/data/Kardia_DB/a_batch/rows";
	baseobj = "/apps/kardia/data/Kardia_DB/a_batch/rows";
	replicasize=10;
	readahead=5;
	autoquery=onload;

        ledger_sync "widget/rule"
            {
            ruletype = "osrc_relationship";
            target = ledger_osrc;
            is_slave = yes;
            key_1 = a_ledger_number;
            target_key_1 = a_ledger_number;
	    autoquery = false;
            }

	set_batch "widget/rule"
	    {
	    ruletype = "osrc_key";
	    keying_method = "counterosrc";
	    key_fieldname = "a_batch_number";
	    osrc = ledger_osrc;
	    counter_attribute = "a_next_batch_number";
	    }

	batch_form "widget/form"
	    {
	    choosebatch "widget/textbutton" 
		{
		x=4;y=4;width=112;height=20;
		text="i18n:Choose Batch";

		choose_cn "widget/connector" { event=Click; target=batchwin; action=Open; }
		}
	    batch_lbl "widget/label" { x=116;y=0;width=516;height=20;align=center;value=runclient("Batch " + isnull(:batch_form:a_batch_number + " - " + :batch_form:a_batch_desc, "(none selected)")); font_size=16; style=bold; }
	    batch_hbox "widget/hbox"
		{
		x=666;y=4;width=108;height=20;spacing=8;cellsize=50;
		nextjnl_eb "widget/editbox"
		    {
		    fieldname="a_next_journal_number";
		    nextjnl_hints "widget/hints" { default=1; style=readonly; }
		    }
		nexttrx_eb "widget/editbox"
		    {
		    fieldname="a_next_transaction_number";
		    nexttrx_hints "widget/hints" { default=1; style=readonly; }
		    }
		}
	    }
	}

    //sep "widget/pane" { x=0;y=80;width=778;height=2; style=lowered;}

    trx_osrc "widget/osrc"
	{
	sql = "SELECT a_amount_plus = condition(:t:a_amount > $0, :t:a_amount, null), a_amount_minus = condition(:t:a_amount < $0, :t:a_amount, null), a_cc_disp = '' + :t:a_cost_center + ' - ' + isnull(:c:a_cc_desc, '**INVALID**'), a_acct_disp = '' + :t:a_account_code + ' - ' + isnull(:a:a_acct_desc, '**INVALID**'), :t:a_account_category, :t:a_ledger_number, :t:a_batch_number, :t:a_journal_number, :t:a_transaction_number, :t:a_period, :t:a_effective_date, :t:a_cost_center, :t:a_account_code, :t:a_amount, :t:a_modified, :t:a_posted, :t:a_corrected, :t:a_correcting, :t:a_transaction_type, :t:a_reconciled, :t:a_postprocessed, :t:a_postprocess_type, :t:a_origin, :t:a_recv_document_id, :t:a_sent_document_id, :t:p_ext_partner_id, :t:p_int_partner_id, :t:a_receipt_sent, :t:a_receipt_desired, :t:a_first_gift, :t:a_gift_type, :t:a_goods_provided, :t:a_gift_received_date, :t:a_gift_postmark_date, :t:a_comment, :t:s_date_created, :t:s_created_by, :t:s_date_modified, :t:s_modified_by FROM IDENTITY /apps/kardia/data/Kardia_DB/a_transaction/rows t, /apps/kardia/data/Kardia_DB/a_account/rows a, /apps/kardia/data/Kardia_DB/a_cost_center/rows c WHERE :t:a_account_code *= :a:a_account_code and :t:a_ledger_number *= :a:a_ledger_number and :t:a_cost_center *= :c:a_cost_center and :t:a_ledger_number *= :c:a_ledger_number ORDER BY :t:a_journal_number, :t:a_transaction_number";
	baseobj = "/apps/kardia/data/Kardia_DB/a_transaction/rows";
	replicasize=100;
	readahead=25;
	autoquery=never;

        batch_sync "widget/rule"
            {
            ruletype = "osrc_relationship";
            target = batch_osrc;
            is_slave = yes;
            key_1 = a_ledger_number;
            target_key_1 = a_ledger_number;
            key_2 = a_batch_number;
            target_key_2 = a_batch_number;
            }

	set_trx "widget/rule"
	    {
	    ruletype = "osrc_key";
	    keying_method = "counterosrc";
	    key_fieldname = "a_transaction_number";
	    osrc = batch_osrc;
	    counter_attribute = "a_next_transaction_number";
	    }

	trx_form "widget/form"
	    {
	    trx_ctls "widget/component"
		{
		x=4;y=30;width=770;height=26;
		path = "/sys/cmp/form_controls.cmp";
		deletable = no;
		multienter = 1;
		object_name = "Transaction";
		}

	    trx_save_1 "widget/connector" { event="DataSaved"; target="batch_total_osrc"; action="Refresh"; }
	    trx_save_2 "widget/connector" { event="DataSaved"; target="jnl_total_osrc"; action="Refresh"; }
	    trx_del_1 "widget/connector" { event="DataDeleted"; target="batch_total_osrc"; action="Refresh"; }
	    trx_del_2 "widget/connector" { event="DataDeleted"; target="jnl_total_osrc"; action="Refresh"; }

	    trx_postproc "widget/variable" { fieldname = "a_postprocess_type"; postproc_hints "widget/hints" { style=readonly; default='XX'; } }
	    trx_postproc2 "widget/variable" { fieldname = "a_postprocessed"; postproc2_hints "widget/hints" { style=readonly; default=0; } }
	    trx_origin "widget/variable" { fieldname = "a_origin"; origin_hints "widget/hints" { style=readonly; default='GL'; } }
	    trx_rcptsent "widget/variable" { fieldname = "a_receipt_sent"; rcptsent_hints "widget/hints" { style=readonly; default=0; } }
	    trx_rcptdes "widget/variable" { fieldname = "a_receipt_desired"; rcptdes_hints "widget/hints" { style=readonly; default=0; } }
	    trx_firstgi "widget/variable" { fieldname = "a_first_gift"; firstgi_hints "widget/hints" { style=readonly; default=0; } }
	    trx_goodprv "widget/variable" { fieldname = "a_goods_provided"; goodprv_hints "widget/hints" { style=readonly; default="0.00"; } }
	    trx_type "widget/variable" { fieldname = "a_transaction_type"; trxtype_hints "widget/hints" { style=readonly; default="T"; } }
	    f_trx_per "widget/variable" { fieldname="a_period"; }
	    f_trx_recon "widget/variable" { fieldname="a_reconciled"; trxrecon_hints "widget/hints" { style=readonly; default=0; } }

	    // auto set period and effective date
	    set_per "widget/connector" { event="New"; target=f_trx_per; action="SetValue"; Value=runclient(:batch_osrc:a_period); }
	    set_eff "widget/connector" { event="New"; target=f_trx_effdate; action="SetValue"; Value=runclient(isnull(:batch_osrc:a_default_effective_date, getdate())); }
	    //set_trx "widget/connector" { event="New"; target=f_trx_trx; action="SetValue"; Value=runclient(:nexttrx_eb:content); }
	    //inc_trx "widget/connector" { event="New"; target=nexttrx_eb; action="SetValue"; Value=runclient(convert(integer,:nexttrx_eb:content) + 1); }

	    // now set jnl id
	    set_jnl "widget/connector" { event="New"; target=f_trx_jnl; action="SetValue"; Value=runclient(:nextjnl_eb:content); }

	    trx_pane "widget/pane"
		{
		x=4;y=56;width=770;height=218;
		widget_class = "table_bgnd";

		trx_table "widget/table"
		    {
		    x=0;y=0;width=768;height=216;
		    //rowheight = 18;
		    mode=dynamicrow;

		    t_a_posted "widget/table-column" { title="i18n:Post"; fieldname="a_posted"; width=40; type=check; }
		    t_a_jnl_num "widget/table-column" { title="i18n:Jnl"; fieldname="a_journal_number"; width=30; }
		    t_a_trx_num "widget/table-column" { title="i18n:Trx"; fieldname="a_transaction_number"; width=30; }
		    t_a_costctr "widget/table-column" { title="i18n:Cost Center"; fieldname="a_cc_disp"; width=135; }
		    t_a_ctlacct "widget/table-column" { title="i18n:Ctl"; fieldname="a_account_category"; width=30; }
		    t_a_acct "widget/table-column" { title="i18n:Account"; fieldname="a_acct_disp"; width=125; }
		    t_a_amtp "widget/table-column" { title="i18n:Debit (+)"; fieldname="a_amount_plus"; width=90; align=right; }
		    t_a_amtm "widget/table-column" { title="i18n:Credit (-)"; fieldname="a_amount_minus"; width=90; align=right; }
		    t_a_comm "widget/table-column" { title="i18n:Comments"; fieldname="a_comment"; width=236; }
		    }
		}

	    trx_form_pane "widget/pane"
		{
		x=4;y=289;width=617;height=200;
		widget_class = "group";

		trx_vbx_1 "widget/vbox"
		    {
		    x=0;y=18;width=290;height=198;cellsize=20;spacing=5;

		    trx_jnl_hbox "widget/hbox"
			{
			spacing=0;
			//f_trx_jnl "widget/component" { width=130; path="/sys/cmp/smart_field.cmp"; field=a_journal_number; ctl_type=editbox; text="i18n:Journal:"; label_width=90; }
			//f_trx_trx "widget/component" { width=90; path="/sys/cmp/smart_field.cmp"; field=a_transaction_number; ctl_type=editbox; text="i18n:Trx:"; label_width=50; }
			f_trx_jnl "widget/component" { width=120; path="/sys/cmp/smart_field.cmp"; field=a_journal_number; ctl_type=label; text="i18n:Journal:"; label_width=90; }
			f_trx_trx "widget/component" { width=80; path="/sys/cmp/smart_field.cmp"; field=a_transaction_number; ctl_type=label; text="i18n:Trx:"; label_width=50; }
			}

		    //f_trx_cc "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_cost_center; ctl_type=editbox; text="i18n:Cost Ctr:"; preview_field="a_cost_center"; preview_sql="select msg=:a_cc_desc from /apps/kardia/data/Kardia_DB/a_cost_center/rows"; height=40; label_width=90; }
		    //f_trx_acct "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_account_code; ctl_type=editbox; text="i18n:Account:"; preview_field="a_account_code"; preview_sql="select msg=:a_acct_desc from /apps/kardia/data/Kardia_DB/a_account/rows"; height=40; label_width=90; }
		    f_trx_cc "widget/component" 
			{ 
			path="/apps/kardia/modules/base/editbox_tree.cmp"; 
			field=a_cost_center; 
			text="i18n:Cost Ctr:"; 
			tooltip="i18n:Cost Center Number"; 
			label_width=90; 
			popup_source = runserver("/apps/kardia/modules/gl/costctrs.qyt/" + :this:ledger + "/");
			popup_text="i18n:Select Cost Center:";

			cc_get_desc_1 "widget/connector" { event=LoseFocus; event_condition=runclient(:trx_form:is_savable); target=ccdesc_osrc; action=QueryParam; a_ledger_number=runclient(:ledger_osrc:a_ledger_number); a_cost_center=runclient(:f_trx_cc:content); }

			ccdesc_osrc "widget/osrc"
			    {
			    sql = "select a_cc_desc = isnull(first(:a_cc_desc),'**INVALID**') from /apps/kardia/data/Kardia_DB/a_cost_center/rows";
			    autoquery = never;
			    replicasize=2;
			    readahead=2;

			    cc_get_desc_2 "widget/connector" { event=EndQuery; target=f_trx_cc; action=SetValueDescription; Description=runclient(:ccdesc_osrc:a_cc_desc); }
			    }
			}
		    f_trx_acct "widget/component"
			{
			path="/apps/kardia/modules/base/editbox_tree.cmp";
			field=a_account_code;
			text="i18n:Account:";
			tooltip="i18n:GL Account Code";
			label_width=90;
			popup_source = runserver("/apps/kardia/modules/gl/accounts.qyt/" + :this:ledger + "/");
			popup_text="i18n:Select Account:";

			auto_fill_ctl "widget/connector"
			    {
			    event=DataChange;
			    event_condition=runclient(:FromOSRC == 0);
			    target=ctl_osrc;
			    action=QueryParam;
			    acct = runclient(:Value);
			    }

			ac_get_desc_1 "widget/connector" { event=LoseFocus; event_condition=runclient(:trx_form:is_savable); target=acdesc_osrc; action=QueryParam; a_ledger_number=runclient(:ledger_osrc:a_ledger_number); a_account_code=runclient(:f_trx_acct:content); }

			acdesc_osrc "widget/osrc"
			    {
			    sql = "select a_acct_desc = isnull(first(:a_acct_desc),'**INVALID**') from /apps/kardia/data/Kardia_DB/a_account/rows";
			    autoquery = never;
			    replicasize=2;
			    readahead=2;

			    ac_get_desc_2 "widget/connector" { event=EndQuery; target=f_trx_acct; action=SetValueDescription; Description=runclient(:acdesc_osrc:a_acct_desc); }
			    }
			}
		    ctl_osrc "widget/osrc"
			{
			acct "widget/parameter" { default=null; }
			sql = runserver("set rowcount 1 select :a_account_category, :a_acct_cat_desc from /apps/kardia/data/Kardia_DB/a_account_category/rows c, /apps/kardia/data/Kardia_DB/a_account/rows a where :a:a_account_code = :parameters:acct and :a:a_default_category = :c:a_account_category and :a:a_ledger_number = :c:a_ledger_number and :a:a_ledger_number = " + quote(:this:ledger));
			readahead=1;
			replicasize=2;
			autoquery=never;

			set_ctl_acct1 "widget/connector"
			    {
			    event=EndQuery;
			    target=f_trx_acctcat;
			    action=SetValue;
			    Value = runclient(:ctl_osrc:a_account_category);
			    }
			set_ctl_acct2 "widget/connector"
			    {
			    event=EndQuery;
			    target=f_trx_acctcat;
			    action=SetValueDescription;
			    Description = runclient(:ctl_osrc:a_acct_cat_desc);
			    }
			}
		    f_trx_acctcat "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_account_category; text="i18n:Control:"; tooltip="i18n:GL Ctl Account Code"; label_width=90; popup_source = runserver("/apps/kardia/modules/gl/ctlacct.qyt/" + :this:ledger + "/"); popup_text="i18n:Select Control:"; }
		    f_trx_amt "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_amount; ctl_type=editbox; text="i18n:Amount:"; label_width=90; }
		    sp1 "widget/autolayoutspacer" { height=0; }
		    trx_post_mod_hbox "widget/hbox"
			{
			spacing=2; height=18;
			f_trx_posted "widget/component" { width=120; path="/sys/cmp/smart_field.cmp"; field=a_posted; ctl_type=checkbox; text="i18n:Posted?"; label_width=90; type="readonly"; }
			f_trx_mod_l "widget/label" { width=86; text="i18n:User Edit?"; align=right; }
			f_trx_mod "widget/checkbox" { width=16; y=4; readonly=yes; fieldname="a_modified"; f_trx_mod_h "widget/hints" { style=readonly,alwaysdef; default=1; } }
			}
		    trx_corr_hbox "widget/hbox"
			{
			spacing=2; height=18;
			f_trx_corr "widget/component" { width=120; path="/sys/cmp/smart_field.cmp"; field=a_corrected; ctl_type=checkbox; text="i18n:Corrected?"; label_width=90; type=readonly; }
			f_trx_corring "widget/component" { width=120; path="/sys/cmp/smart_field.cmp"; field=a_correcting; ctl_type=checkbox; text="i18n:Correcting?"; label_width=90; type=readonly; }
			}
		    }
		f_trx_comm "widget/component" { x=290; width=310; y=160; height=20; path="/sys/cmp/smart_field.cmp"; field=a_comment; ctl_type=editbox; text="i18n:Comment:"; label_width=90; }
		trx_vbx_2 "widget/vbox"
		    {
		    x=320;y=18;width=280;height=198;cellsize=20;spacing=5;

		    f_trx_effdate "widget/component" { path="/sys/cmp/smart_field.cmp"; field="a_effective_date"; ctl_type=datetime; text="i18n:Eff. Date:"; label_width=90; }
		    f_trx_int_pid "widget/component" { path="/sys/cmp/smart_field.cmp"; field=p_int_partner_id; ctl_type=editbox; text="i18n:Int. Partner:"; label_width=90; }
		    f_trx_ext_pid "widget/component" { path="/sys/cmp/smart_field.cmp"; field=p_ext_partner_id; ctl_type=editbox; text="i18n:Ext. Partner:"; label_width=90; }
		    f_trx_rcv_doc "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_recv_document_id; ctl_type=editbox; text="i18n:Recv'd Doc:"; label_width=90; }
		    f_trx_snd_doc "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_sent_document_id; ctl_type=editbox; text="i18n:Sent Doc:"; label_width=90; }
		    //f_trx_comm "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_comment; ctl_type=textarea; text="i18n:Comment:"; label_width=90; height=20; }
		    }
		}
	    trx_form_pane_hdr "widget/pane"
		{
		x=20;y=280;width=180;
		widget_class = "label";
		trx_form_pane_hdr_l "widget/label" { x=0;width=178;height=16;value=runclient(isnull(condition(:trx_form:a_posted == 1, "Posted ", "Unposted "),"") + "Transaction"); widget_class="label"; }
		}

	    trx_form_pane_2 "widget/pane"
		{
		condition = 0;
		x=505;y=289;width=125;height=200;
		widget_class = "group";

		trx_vbx_3 "widget/vbox"
		    {
		    x=0;y=20;width=123;height=198;cellsize=20;spacing=5;

		    //f_trx_ldgr "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_ledger_number; ctl_type=editbox; text="i18n:Ledger:"; type=readonly; label_width=60; }
		    //f_trx_bat "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_batch_number; ctl_type=editbox; text="i18n:Batch:"; type=readonly; label_width=60; }
		    //f_trx_per "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_period; ctl_type=editbox; text="i18n:Period:"; type=readonly; label_width=60; }
		    f_trx_corr "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_corrected; ctl_type=checkbox; text="i18n:Corrected?"; label_width=80; }
		    f_trx_corring "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_correcting; ctl_type=checkbox; text="i18n:Correcting?"; label_width=80; }
		    }
		}
	    trx_form_pane_hdr_2 "widget/pane"
		{
		condition = 0;
		x=521;y=280;width=100;
		widget_class = "label";
		trx_form_pane_hdr_2_l "widget/label" { x=0;width=98;height=16;value="Corrections"; widget_class="label"; }
		}

	    postbatch_osrc "widget/osrc"
		{
		sql = "UPDATE /apps/kardia/data/Kardia_DB/a_transaction/rows set :a_posted = 1";
		replicasize=10;
		readahead=10;
		autoquery=never;

		post_batch_cn2 "widget/connector"
		    {
		    event="EndQuery";
		    target=trx_osrc;
		    action="Refresh";
		    }
		}

	    trx_vbox_4 "widget/vbox"
		{
		x=644;y=289;width=130;height=200;cellsize=25;spacing=5;

		new_line_btn "widget/textbutton"
		    {
		    width=130;
		    text="i18n:New Trx Line";
		    enabled=runclient(:trx_form:is_newable and :batch_form:is_editable and (:trx_form:a_posted == 0 or not :trx_form:is_editable));
		    new_line_cn1 "widget/connector" { event="Click"; target=trx_form; action="New"; }
		    }
		new_jnl_btn "widget/textbutton"
		    {
		    width=130;
		    text="i18n:New Journal";
		    enabled=runclient(:trx_form:is_newable and :batch_form:is_editable and (:trx_form:a_posted == 0 or not :trx_form:is_editable) and :jnl_total_form:total == '$0.00');
		    new_jnl_cn1 "widget/connector" { event="Click"; target=trx_form; action="New"; }
		    new_jnl_cn2 "widget/connector" { event="Click"; target=nextjnl_eb; action="SetValue"; Value=runclient(convert(integer,:nextjnl_eb:content) + 1); }
		    new_jnl_cn3 "widget/connector" { event="Click"; target=batch_form; action="Save"; }
		    new_jnl_cn4 "widget/connector" { event="Click"; target=f_trx_jnl; action="SetValue"; Value=runclient(:nextjnl_eb:content); }
		    }
		del_line_btn "widget/textbutton"
		    {
		    width=130;
		    text="i18n:Delete Trx Line";
		    enabled=runclient(:trx_form:is_editable and :batch_form:is_editable and :trx_form:a_posted == 0);
		    del_line_cn1 "widget/connector" { event="Click"; target=trx_form; action="Delete"; }
		    }
		sp2 "widget/autolayoutspacer" { height=4; }
		post_batch_btn "widget/textbutton" 
		    {
		    width=130;
		    text="i18n:Post This Batch";
		    enabled=runclient(:trx_form:is_editable and :batch_total_form:total == '$0.00' and :trx_form:a_posted == 0 and :batch_form:is_editable);

		    post_batch_cn1 "widget/connector"
			{
			event="Click";
			target=bpwin;
			action=PostBatch;
			Batch=runclient(:batch_osrc:a_batch_number);
			//target=postbatch_osrc;
			//action="QueryParam";
			//a_ledger_number = runclient(:ledger_osrc:a_ledger_number);
			//a_batch_number = runclient(convert(integer,:batch_osrc:a_batch_number));
			}
		    }
		trx_summary_btn "widget/textbutton"
		    {
		    width=130;
		    text="i18n:View Summary";
		    enabled=runclient(:trx_form:is_editable and :batch_total_form:total == '$0.00' and :batch_form:is_editable);
		    trx_summary_cn "widget/connector" { event="Click"; target=glj_summary; action="OpenModal"; }
		    }
		sp3 "widget/autolayoutspacer" { height=4; }
		trx_corr_btn "widget/textbutton"
		    {
		    width=130;
		    text="i18n:Make Correction";
		    enabled=runclient(:trx_form:a_posted == 1);
		    //trx_summary_cn "widget/connector" { event="Click"; target=glj_summary; action="OpenModal"; }
		    }
		}
	    info_pane "widget/pane"
		{
		x=4;y=495;width=770;height=26;style=raised;
		widget_class = "group";

		info_hbox "widget/hbox"
		    {
		    x=0;y=2;width=768;height=20;spacing=5;

		    batch_total_osrc "widget/osrc"
			{
			sql = "select cnt = count(:a_amount), total = isnull(sum(:a_amount),$0) from /apps/kardia/data/Kardia_DB/a_transaction/rows";

			batch_total_link "widget/rule"
			    {
			    ruletype = "osrc_relationship";
			    target = trx_osrc;
			    is_slave = yes;
			    key_1 = a_ledger_number;
			    target_key_1 = a_ledger_number;
			    key_2 = a_batch_number;
			    target_key_2 = a_batch_number;
			    }

			batch_total_form "widget/form"
			    {
			    batch_total_lbl "widget/label"
				{
				width=150;
				value = runclient("Batch Total: " + isnull(:batch_total_form:total, "(empty)"));
				}
			    }
			}

		    jnl_total_osrc "widget/osrc"
			{
			sql = "select cnt = count(:a_amount), total = isnull(sum(:a_amount),$0) from /apps/kardia/data/Kardia_DB/a_transaction/rows";

			jnl_total_link "widget/rule"
			    {
			    ruletype = "osrc_relationship";
			    target = trx_osrc;
			    is_slave = yes;
			    key_1 = a_ledger_number;
			    target_key_1 = a_ledger_number;
			    key_2 = a_batch_number;
			    target_key_2 = a_batch_number;
			    key_3 = a_journal_number;
			    target_key_3 = a_journal_number;
			    }

			jnl_total_form "widget/form"
			    {
			    jnl_total_lbl "widget/label"
				{
				width=150;
				value = runclient("Journal Total: " + isnull(:jnl_total_form:total, "(empty)"));
				}
			    }

			// Auto increment journal when current jnl balances
			new_jnl2_cn1 "widget/connector" { event="EndQuery"; event_condition=runclient(:trx_form:is_multienter and :jnl_total_osrc:total == '$0.00' and :jnl_total_osrc:cnt > 0); target=nextjnl_eb; action="SetValue"; Value=runclient(convert(integer,:nextjnl_eb:content) + 1); }
			new_jnl2_cn2 "widget/connector" { event="EndQuery"; event_condition=runclient(:trx_form:is_multienter and :jnl_total_osrc:total == '$0.00' and :jnl_total_osrc:cnt > 0); target=batch_form; action="Save"; }
			new_jnl2_cn3 "widget/connector" { event="EndQuery"; event_condition=runclient(:trx_form:is_multienter and :jnl_total_osrc:total == '$0.00' and :jnl_total_osrc:cnt > 0); target=f_trx_jnl; action="SetValue"; Value=runclient(:nextjnl_eb:content); }
			}

		    f_s_created_by_cmp "widget/component" { path="/sys/cmp/smart_field.cmp"; field=s_created_by; text="i18n:Created:"; ctl_type="editbox"; type="create"; tooltip="i18n:The user who created the transaction"; label_width=65; width=130; }
		    f_s_date_created_cmp "widget/component" { path="/sys/cmp/smart_field.cmp"; field=s_date_created; text="x"; ctl_type="datetime"; type="create"; tooltip="i18n:The date the record was created."; label_width=0; width=90; }
		    f_s_modified_by_cmp "widget/component" { path="/sys/cmp/smart_field.cmp"; field=s_modified_by; text="i18n:Modified:"; ctl_type="editbox"; type="modify"; tooltip="i18n:The user who modified the transaction"; label_width=65; width=130; }
		    f_s_date_modified_cmp "widget/component" { path="/sys/cmp/smart_field.cmp"; field=s_date_modified; text="x"; ctl_type="datetime"; type="modify"; tooltip="i18n:The date the record was created."; label_width=0; width=90; }
		    }
		}
	    }
	}
    }

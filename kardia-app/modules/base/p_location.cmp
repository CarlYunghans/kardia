$Version=2$
p_location_component "widget/component-decl"
    {
    width=806;height=338;

    //This osrc is a parameter passed in from the outside
    sync_osrc "widget/parameter" { type=object; find_container="widget/osrc"; }

    // Refresh if we make a change
    send_refresh "widget/parameter" { type=integer; default=0; deploy_to_client=yes; }
    send_refresh_to "widget/parameter" { type=object; deploy_to_client=yes; }

    Sync "widget/component-decl-action" {  }
    OpenForms "widget/component-decl-action" {  }
    OpenForms_cn1 "widget/connector"
        {
        event = "OpenForms";
        target = p_location_window;
        action=SetVisibility; 
	IsVisible=1;
        }

    person_location_osrc "widget/osrc"
        {
        sql="	SELECT
		    :l:p_postal_mode,
		    :l:p_purge_date,
		    :l:p_postal_code,
		    :l:p_date_effective,
		    all=(:l:p_address_1 + condition(char_length(rtrim(:l:p_address_2)) > 0 , ' / ' + :l:p_address_2, '') + condition(char_length(rtrim(:l:p_address_3)) > 0, ' / ' + :l:p_address_3, '')),
		    :l:p_in_care_of,
		    :l:p_address_1,
		    :l:p_address_2,
		    :l:p_address_3,
		    :l:p_city,
		    :l:p_state_province,
		    :l:p_country_code,
		    :l:p_location_type,
		    :l:p_record_status_code,
		    :l:p_partner_key,
		    :l:p_date_good_until,
		    :l:p_certified_date,
		    :l:p_location_comments,
		    :l:p_location_id,
		    :l:p_bulk_postal_code,
		    :l:p_postal_status,
		    :l:s_created_by,
		    :l:s_date_created,
		    :l:s_modified_by,
		    :l:s_date_modified,
		    loc_type_text = isnull(:lt:text, 'INVALID'),
		    rec_stat_txt = isnull(:rsc:text, 'Unknown'),
		    sec_level = isnull(:c:p_security_level, 0),
		    p_country_name = upper(:c:p_country_name),
		    :af:p_format
		FROM
		    identity /apps/kardia/data/Kardia_DB/p_location/rows l,
		    /apps/kardia/data/Kardia_DB/_p_location_type/rows lt,
		    /apps/kardia/data/Kardia_DB/_p_record_status/rows rsc,
		    /apps/kardia/data/Kardia_DB/p_country/rows c,
		    /apps/kardia/data/Kardia_DB/p_address_format/rows af
		WHERE
		    :l:p_revision_id = 0 and
		    :l:p_location_type *= :lt:tag and
		    :l:p_record_status_code *= :rsc:tag and
		    :l:p_country_code *= :c:p_country_code and
		    :af:p_country_code =* :c:p_country_code and
		    :af:p_address_set = 'STANDARD'
		ORDER BY
		    :l:p_location_id
		";

        baseobj = "/apps/kardia/data/Kardia_DB/p_location/rows";
        replicasize=12;
        readahead=6;
        autoquery=never;

	loc_sync "widget/rule"
	    {
	    ruletype = "osrc_relationship";

	    target = sync_osrc;
	    is_slave = yes;
	    key_1 = p_partner_key;
	    target_key_1 = p_partner_key;
	    revealed_only = yes;
	    }

	autoload_locations "widget/connector"
	    {
	    event=EndQuery;
	    target=contact_fields;
	    action=SetLocationItems;
	    SQL=runclient("
		    select 
			label = :p_location_type + ': ' + isnull(:p_city + ', ','') + isnull(:p_state_province,'') + ' (' + rtrim(isnull(:p_address_1 + ' ','') + isnull(:p_address_2 + ' ','') + isnull(:p_address_3,'')) + ')',
			value = :p_location_id
		    from
			/apps/kardia/data/Kardia_DB/p_location/rows where :p_revision_id = 0 and :p_partner_key = " + quote(:person_location_osrc:p_partner_key) + "
		    ;
		    select
			label = :tag + ': (' + :text + ', no address)',
			value = :tag
		    from
			/apps/kardia/data/Kardia_DB/_p_location_type/rows
		    ");
	    }

	// Vbox containing (1) location data and (2) contact data
	location_vbox "widget/vbox"
	    {
	    x=0; y=0;
	    width=806;height=338;
	    spacing=10;

	    // Hbox containing (1) location label and list, and (2) location form
	    location_hbox "widget/hbox"
		{
		height=216;
		spacing=10;

		// Vbox containing (1) location label and (2) location list
		location_list_vbox "widget/vbox"
		    {
		    width=260;
		    spacing=10;

		    location_addr_label "widget/component"
			{
			height=75;
			path = "/apps/kardia/modules/base/address_label_fmt.cmp";
			//path = "/apps/kardia/modules/base/address_label.cmp";
			partner = sync_osrc;
			location = person_location_osrc;
			}

		    location_table_pane "widget/pane"
			{
			height=94;
			widget_class=table_bgnd;

			p_location_table "widget/table"
			    {
			    x=0;y=0;
			    height=92;
			    width=258;
			    mode=dynamicrow;

			    table_location_type "widget/table-column" { width=42; title = "Type"; fieldname = loc_type_text; }
			    table_address "widget/table-column" { width=105; title = "Address"; fieldname = all; }
			    table_city "widget/table-column" { width=70; title = "City"; fieldname = p_city; }
			    table_state "widget/table-column" { width=25; title = "St."; fieldname = p_state_province; }
			    //table_postal "widget/table-column" { width=60; title = "Postal"; fieldname = p_postal_code; }
			    }
			}

		    location_ctl_hbox "widget/hbox"
			{
			height=26;
			align=center;
			spacing=4;

			location_menu "widget/menu"
			    {
			    width=160; height=26;
			    widget_class="bar";
			    
			    location_menu_popup "widget/menu"
				{
				label="Address Options";
				icon = "/sys/images/menu_dnarrow.gif";
				widget_class="popup";

				internet_opts "widget/menu"
				    {
				    label="Internet Resources";
				    widget_class="popup";

				    internet_opts_rpt "widget/repeat"
					{
					sql = "select path = :cx__pathname, module = :cx__pathpart4, component = :cx__pathpart5, :title from object wildcard '/apps/kardia/modules/*/plugin_base_addrinternet_*.cmp'";

					one_item "widget/menuitem"
					    {
					    label=runserver(:internet_opts_rpt:title);

					    one_item_cmp "widget/component"
						{
						path=runserver(:internet_opts_rpt:path);
						person_osrc = sync_osrc;
						person_location_osrc = person_location_osrc;

						one_item_select "widget/connector"
						    {
						    source=one_item;
						    event=Select;
						    //target=one_item_cmp;
						    action=Select;
						    }
						}
					    }
					}
				    }

				search_dups "widget/menuitem"
				    {
				    label = "Check for Duplicates";

				    search_dups_select "widget/connector"
					{
					event=Select;
					target=p_location_component;
					action=Launch;
					Width=806;
					Height=562;
					Source="/apps/kardia/modules/base/dup_check.app";
					partner_key = runclient(:sync_osrc:p_partner_key);
					location_id = runclient(:person_location_osrc:p_location_id);
					given_name = runclient(:sync_osrc:p_given_name);
					surname = runclient(:sync_osrc:p_surname);
					org_name = runclient(:sync_osrc:p_org_name);
					address_1 = runclient(:person_location_osrc:p_address_1);
					city = runclient(:person_location_osrc:p_city);
					state_province = runclient(:person_location_osrc:p_state_province);
					postal_code = runclient(:person_location_osrc:p_postal_code);
					// The following have to be looked up by dup_check.app, since we only have
					// access to one contact record at a time in this context.
					//email1 = runclient(:email_field:content);
					//phone1_area = runclient(:new_phone_fields:area);
					//phone1_number = runclient(:new_phone_fields:number);
					//phone2_area = runclient(:new_phone2_fields:area);
					//phone2_number = runclient(:new_phone2_fields:number);
					}
				    }
				}
			    }
			}
		    }

		// Vbox containing the location form
		location_form_vbox "widget/vbox"
		    {
		    width=536;
		    spacing=6;

		    location_form "widget/form"
			{
			allow_query = no;

			send_refresh_on_save "widget/connector"
			    {
			    condition=runserver(:this:send_refresh);
			    event=DataSaved;
			    //event_condition=runclient(:p_location_component:send_refresh);
			    target=send_refresh_to;
			    action=Refresh;
			    }

			auto_new_on_new_partner "widget/connector"
			    {
			    source=sync_osrc;
			    event=Created;
			    action=New;
			    }

			location_hdr "widget/component"
			    {
			    height = 22;
			    path = "/apps/kardia/modules/base/section_header.cmp";
			    text = runclient("Address: " + isnull('(' + :person_location_osrc:rec_stat_txt + ')',''));
			    object_name = "Address";
			    allow_new = 1;
			    //allow_delete = 1;
			    }

			location_fields "widget/component"
			    {
			    height=188;
			    path="/apps/kardia/modules/base/p_location_fields.cmp";
			    }
			}
		    }
		}

	    sep_line "widget/pane" { height=2; style=lowered; }

	    // Hbox containing (1) contact list and (2) contact form
	    contact_hbox "widget/hbox"
		{
		height=101;
		spacing=10;

		p_contact_info_osrc "widget/osrc"
		    {
		    sql="   SELECT
				:c:p_contact_id,
				:c:p_contact_type,
				all=(isnull(:c:p_phone_country + ' ', '') + isnull(:c:p_phone_area_city + ' ', '') + :c:p_contact_data),
				:c:p_phone_country,
				:c:p_contact_comments,
				:c:p_partner_key,
				:c:p_location_id,
				:c:p_record_status_code,
				:c:p_phone_area_city,
				:c:p_contact_data,
				:c:s_created_by,
				:c:s_date_created,
				:c:s_modified_by,
				:c:s_date_modified,
				con_type_txt = :ct:text,
				loc_type_txt = isnull(:lt:text, isnull(:lt2:text,'-')),
				rec_stat_txt = isnull(:rsc:text, 'Unknown')
			    FROM
				IDENTITY /apps/kardia/data/Kardia_DB/p_contact_info/rows c,
				/apps/kardia/data/Kardia_DB/_p_contact_type/rows ct,
				/apps/kardia/data/Kardia_DB/p_location/rows l,
				/apps/kardia/data/Kardia_DB/_p_location_type/rows lt,
				/apps/kardia/data/Kardia_DB/_p_location_type/rows lt2,
				/apps/kardia/data/Kardia_DB/_p_record_status/rows rsc
			    WHERE
				:c:p_contact_type = :ct:tag and
				convert(integer,:c:p_location_id) *= :l:p_location_id and
				:c:p_partner_key *= :l:p_partner_key and
				:l:p_location_type *= :lt:tag and
				:l:p_revision_id = 0 and
				convert(string,:c:p_location_id) *= :lt2:tag and
				:c:p_record_status_code *= :rsc:tag
			    ORDER BY
				:c:p_location_id,
				:c:p_contact_id
			    ";
		    baseobj = "/apps/kardia/data/Kardia_DB/p_contact_info/rows";
		    replicasize=12;
		    readahead=6;
		    autoquery=never;

		    contact_sync "widget/rule"
			{
			ruletype = "osrc_relationship";

			target = person_location_osrc;
			is_slave = yes;
			key_1 = p_partner_key;
			key_objname = "c";
			target_key_1 = p_partner_key;
			revealed_only = yes;
			}

		    contact_table_pane "widget/pane"
			{
			width=260;
			widget_class=table_bgnd;
			p_contact_table "widget/table"
			    {
			    x=0;y=0;
			    height=99;
			    width=258;
			    mode=dynamicrow;

			    table_contact_type "widget/table-column" { width=47; title = "Type"; fieldname = con_type_txt; }
			    table_contact_location_type "widget/table-column" { width=47; title = "Where"; fieldname = loc_type_txt; }
			    table_contact_data "widget/table-column" { width=148; title = "Contact Info"; fieldname = all; }
			    }
			}

		    contact_form_vbox "widget/vbox"
			{
			width=536;
			spacing=6;

			contact_form "widget/form"
			    {
			    allow_query = no;

			    send_refresh_on_save2 "widget/connector"
				{
				condition=runserver(:this:send_refresh);
				event=DataSaved;
				//event_condition=runclient(:p_location_component:send_refresh);
				target=send_refresh_to;
				action=Refresh;
				}

			    contact_hdr "widget/component"
				{
				height = 22;
				path = "/apps/kardia/modules/base/section_header.cmp";
				text = runclient("Contact Information: " + isnull('(' + :p_contact_info_osrc:rec_stat_txt + ')',''));
				object_name = "Contact Record";
				allow_new = 1;
				allow_delete = 1;
				}

			    contact_fields "widget/component"
				{
				height=73;
				path="/apps/kardia/modules/base/p_contact_info_fields.cmp";
				}
			    }
			}
		    }
		}
	    }
        }
    }

$Version=2$
m_list_membership_component "widget/component-decl"
    {
    title = "Mailings";
    width=831;height=338;

    partner_osrc "widget/parameter"
        {
        //This osrc is a parameter passed in from the outside
        type=object;
        find_container="widget/osrc";
        }

    memb_osrc "widget/osrc"
        {
        sql="	SELECT
			:m:m_list_description, :m:m_list_type, :m:m_list_status,
			:l:p_partner_key,
			:l:m_list_code,
			liststat = :ls:text,
			m_hist_id = first(:l:m_hist_id),
			p_postal_mode = first(:l:p_postal_mode),
			m_membership_status = first(:l:m_membership_status),
			m_comments = first(isnull(:l:m_comments,'')),
			p_contact_id = first(:l:p_contact_id),
			m_member_type = first(:l:m_member_type),
			m_contact = first(:l:m_contact),
			p_location_id = first(:l:p_location_id),
			m_num_copies = first(:l:m_num_copies),
			m_num_issues_sub = first(:l:m_num_issues_sub),
			m_num_issues_recv = first(:l:m_num_issues_recv),
			m_start_date = first(:l:m_start_date),
			m_end_date = first(:l:m_end_date),
			m_hold_until_date = first(:l:m_hold_until_date),
			m_renewal_date = first(:l:m_renewal_date),
			m_cancel_date = first(:l:m_cancel_date),
			m_notice_sent_date = first(:l:m_notice_sent_date),
			m_complimentary = first(:l:m_complimentary),
			m_show_contact = first(:l:m_show_contact),
			m_contact = first(:l:m_contact),
			m_delivery_method = first(:l:m_delivery_method),
			m_reason_member = first(:l:m_reason_member),
			m_reason_cancel = first(:l:m_reason_cancel),
			s_date_created = first(:l:s_date_created),
			s_created_by = first(:l:s_created_by),
			s_date_modified = first(:l:s_date_modified),
			s_modified_by = first(:l:s_modified_by),
			membstat = first(:ms:text + condition(:l:m_hold_until_date is null or :l:m_hold_until_date <= getdate(), '', '-OnHold')),
			postmode = first(:pm:text),
			cancel_txt = first(:cr:text),
			member_txt = first(:mr:text),
			sub_date_txt = first(substring(convert(string,:s_date_created),1,11)),
			delivery_txt = first(isnull(:dm:text, 'Postal Mail'))
		FROM 
			/apps/kardia/data/Kardia_DB/m_list_membership/rows l,
			/apps/kardia/data/Kardia_DB/m_list/rows m,
			/apps/kardia/data/Kardia_DB/_m_membership_status/rows ms,
			/apps/kardia/data/Kardia_DB/_p_postal_mode/rows pm,
			/apps/kardia/data/Kardia_DB/_m_list_status/rows ls,
			/apps/kardia/data/Kardia_DB/_m_cancel_reason/rows cr,
			/apps/kardia/data/Kardia_DB/_m_member_reason/rows mr,
			/apps/kardia/data/Kardia_DB/_m_delivery_method/rows dm
		WHERE
			:m:m_list_code = :l:m_list_code and
			:m:m_list_type = 'P' and
			:ms:tag =* :l:m_membership_status and
			:pm:tag =* :l:p_postal_mode and
			:ls:tag =* :m:m_list_status and
			:l:m_reason_cancel *= :cr:tag and
			:l:m_reason_member *= :mr:tag and
			:l:m_delivery_method *= :dm:tag and
			(:l:m_membership_status != 'D' or dateadd(day,1,:s_date_modified) > getdate())
		GROUP BY
			:l:m_list_code
		ORDER BY
			isnull(charindex(:l:m_membership_status, 'APCED'), 0),
			:l:s_date_modified desc
		HAVING
			:m_list_code is not null
		";

        baseobj = "/apps/kardia/data/Kardia_DB/m_list_membership/rows";
        replicasize=30;
        readahead=10;
        autoquery=never;

        loc_sync "widget/rule"
            {
            ruletype = "osrc_relationship";
            target = partner_osrc;
            key_1 = p_partner_key;
            target_key_1 = p_partner_key;
	    revealed_only = yes;
            }

	autoload_locations "widget/connector"
	    {
	    condition = 0;
	    event=EndQuery;
	    target=pref_location;
	    action=SetItems;
	    SQL=runclient("select label = :p_location_type + ': ' + isnull(:p_city + ', ','') + isnull(:p_state_province,'') + ' (' + rtrim(isnull(:p_address_1 + ' ','') + isnull(:p_address_2 + ' ','') + isnull(:p_address_3,'')) + ')', value = :p_location_id from /apps/kardia/data/Kardia_DB/p_location/rows where :p_revision_id = 0 and :p_partner_key = " + quote(:partner_osrc:p_partner_key));
	    }

	autoload_contacts "widget/connector"
	    {
	    condition = 0;
	    event=EndQuery;
	    target=pref_contact;
	    action=SetItems;
	    SQL=runclient("select label = :ct:text + ': ' + isnull(:c:p_phone_country + ' ','') + isnull(:c:p_phone_area_city + ' ','') + isnull(:c:p_contact_data,''), value = :c:p_contact_id from /apps/kardia/data/Kardia_DB/p_contact_info/rows c, /apps/kardia/data/Kardia_DB/_p_contact_type/rows ct where :p_partner_key = " + quote(:partner_osrc:p_partner_key) + " and :c:p_contact_type = :ct:tag");
	    }

        ConfirmWindow "widget/childwindow"
            {
            title = "New Subscription Not Yet Saved!";
            titlebar = yes;
            hdr_bgcolor="#c00000";
            bgcolor= "#e0e0e0";
            visible = false;
            style = dialog;
            x=200;y=50;width=400;height=140;
	    toplevel=yes;

            warninglabel "widget/label"
                {
                x=10;y=10;width=376;height=30;
                //text="Some data was modified.  Do you want to save it first, discard your modifications, or simply cancel the operation?";
		value=runclient("You started to add list (" + isnull(:f_listcode:content, 'blank') + ") to this person but did not save it.  Click Save to add the list, Discard to not add the list, or Cancel to go back to 'Add a Subscription'.");
                }

	    _3b_hbox "widget/hbox"
		{
		x=10; y=75; width=378; height=30;
		align=center;

		_3bConfirmSave "widget/textbutton"
		    {
		    width=80;height=30;
		    tristate=no;
		    background="/sys/images/grey_gradient.png";
		    text = "Save";
		    fgcolor1=black;fgcolor2=white;
		    }
		_3bConfirmDiscard "widget/textbutton"
		    {
		    width=80;height=30;
		    tristate=no;
		    background="/sys/images/grey_gradient.png";
		    text = "Discard";
		    fgcolor1=black;fgcolor2=white;
		    }
		_3bConfirmCancel "widget/textbutton"
		    {
		    width=80;height=30;
		    tristate=no;
		    background="/sys/images/grey_gradient.png";
		    text = "Cancel";
		    fgcolor1=black;fgcolor2=white;
		    }
		}
            }

        m_list_membership_form "widget/form"
            {
            _3bconfirmwindow = "ConfirmWindow";
	    allow_view = no;
	    allow_modify = no;
	    allow_query = no;

	    clear_on_create "widget/connector"
		{
		event=DataSaved;
		target=m_list_membership_form;
		action=Discard;
		}

            m_list_membership_ctl "widget/component"
                {
		condition=0;
                x=0;y=0;width=831;height=24;
                path="/sys/cmp/form_controls.cmp";
		object_name="Membership";
		deletable = 0;
                bgcolor="#d0d0d0";
                }
	    List_membership_table_pane "widget/pane"
		{
		x=0;y=0;
		height=189;
		width=831;
		widget_class = "table_bgnd";

		list_membership_table "widget/table"
		    {
		    x=0;y=0;
                    height=160;
                    width=829;
                    mode=dynamicrow;

		    table_list_code "widget/table-column" { title="List"; fieldname="m_list_code"; width=60; }
		    table_description "widget/table-column" { title="Description"; fieldname="m_list_description"; width=200; }
		    table_list_status "widget/table-column" { title="List Status"; fieldname="liststat"; width=80; }
		    table_membership_status "widget/table-column" { title="Subscription"; fieldname="membstat"; width=95; }
		    table_memb_date "widget/table-column" { title="Sub. Date"; fieldname="sub_date_txt"; width=95; }
		    table_deliv_method "widget/table-column" { title="Delivery"; fieldname="delivery_txt"; width=85; }
		    //table_postal_mode "widget/table-column" { title="Postal Mode"; fieldname="postmode"; width=100; }
		    table_comments "widget/table-column" { title="Comments"; fieldname="m_comments"; width=196; }
		    }
		}

	    dt_c "widget/variable" { fieldname="s_date_created"; dt_c_hints "widget/hints" { default=runclient(getdate()); } }
	    us_c "widget/variable" { fieldname="s_created_by"; us_c_hints "widget/hints" { default=runclient(user_name()); } }
	    dt_m "widget/variable" { fieldname="s_date_modified"; dt_m_hints "widget/hints" { default=runclient(getdate()); style=alwaysdef; } }
	    us_m "widget/variable" { fieldname="s_modified_by"; us_m_hints "widget/hints" { default=runclient(user_name()); style=alwaysdef; } }

	    comp_v "widget/variable" { fieldname="m_complimentary"; comp_v_hints "widget/hints" { default=runclient(1); } }
	    showc_v "widget/variable" { fieldname="m_show_contact"; showc_v_hints "widget/hints" { default=runclient(1); } }
	    memstat_v "widget/variable" { fieldname="m_membership_status"; memstat_v_hints "widget/hints" { default=runclient('A'); } }
	    memtype_v "widget/variable" { fieldname="m_member_type"; memtype_v_hints "widget/hints" { default=runclient('M'); } }
	    numcopy_v "widget/variable" { fieldname="m_num_copies"; numcopy_v_hints "widget/hints" { default=runclient(1); } }


	    add_membership_grp "widget/pane"
		{
		x=0; y=205; width=320; height=133;
		widget_class = group;
		background="/apps/kardia/images/bg/light_bgnd3.jpg";

		list_membership_form_vbox_1 "widget/vbox"
		    {
		    x=10;y=18;height=113;width=298;
		    cellsize=20;
		    spacing=4;

		    f_listcode "widget/component"
			{
			height=24;
			//width=300;
			path="/apps/kardia/modules/base/editbox_table.cmp";
			field='m_list_code';
			text='List Code:';
			label_width=90;
			validate=1;
			popup_width=300;
			popup_height=210;
			popup_sql="select value = :m:m_list_code, label = :m:m_list_description + ' (' + :m:m_list_code + ')' from /apps/kardia/data/Kardia_DB/m_list/rows m where :m:m_list_type = 'P'";
			search_field_list="m_list_code,*m_list_description*";
			key_name="m_list_code";
			object_name="Mailing List";
			popup_text="Select a Mailing:";
			//attach_point=editbox;

			on_list_change "widget/connector"
			    {
			    event=DataChange;
			    target=memb_info_osrc;
			    action=QueryParam;
			    mio_list_id=runclient(:Value);
			    mio_partner_key=runclient(:partner_osrc:p_partner_key);
			    }

			listcode_hints "widget/hints" { style=applyonchange; }
			}

		    memb_info_osrc "widget/osrc"
			{
			mio_list_id "widget/parameter" { type=string; }
			mio_partner_key "widget/parameter" { type=string; }
			sql = "	select
				    deleted_cnt = isnull(sum(condition(:ml:m_membership_status == 'D', 1, 0)),0),
				    deleted_last = max(condition(:ml:m_membership_status == 'D', :ml:s_date_modified, null)),
				    active_cnt = isnull(sum(condition(:ml:m_membership_status == 'A', 1, 0)),0),
				    canceled_cnt = isnull(sum(condition(:ml:m_membership_status == 'C', 1, 0)),0)
				from
				    /apps/kardia/data/Kardia_DB/m_list_membership/rows ml
				where
				    :ml:p_partner_key = :parameters:mio_partner_key and
				    :ml:m_list_code = :parameters:mio_list_id
				";
			readahead=2;
			replicasize=2;
			autoquery=never;
			}

		    //list_code "widget/component" { height=20; label_width=90; path="/sys/cmp/smart_field.cmp"; field='m_list_code'; ctl_type=dropdown; text='List:'; sql=runserver("select :m_list_code + ': ' + :m_list_description, :m_list_code from /apps/kardia/data/Kardia_DB/m_list/rows where :m_list_type = 'P' order by :m_list_code"); } 
		    reason "widget/component" { height=20; label_width=90; path="/sys/cmp/smart_field.cmp"; field='m_reason_member'; ctl_type=dropdown; text='Reason:'; sql = "select :text, :tag from /apps/kardia/data/Kardia_DB/_m_member_reason/rows"; } 
		    comment "widget/component" { height=20; label_width=90; path="/sys/cmp/smart_field.cmp"; field='m_comments'; ctl_type=editbox; text='Comments:'; } 
		    add_hbox "widget/hbox"
			{
			height=28;
			align=center;

			add_btn "widget/textbutton"
			    {
			    y=4; height=24; width=120;
			    text = "Add";
			    enabled = runclient(char_length(:f_listcode:content) > 0 and char_length(:f_listcode:description) > 0 and :memb_info_osrc:active_cnt = 0);

			    add_btn_cn "widget/connector" { event=Click; target=m_list_membership_form; action=Save; }
			    }
			}
		    }
		popover_memb_warn "widget/childwindow"
		    {
		    width=250; height=64;
		    x=0; y=0;
		    toplevel=yes;
		    titlebar=no;
		    visible=no;
		    border_radius=8;
		    border_style=solid;
		    border_color=black;
		    shadow_radius=8;
		    shadow_color=black;
		    shadow_offset=0;
		    background=null;
		    bgcolor=white;

		    popover_message "widget/label" { x=0; y=25; width=248; height=14; align=center; text=""; }

		    close_on_endquery "widget/connector" { source=f_listcode; event=DataModify; action=Close; }
		    open_on_deleted "widget/connector" { source=memb_info_osrc; event=EndQuery; event_condition=runclient(:memb_info_osrc:deleted_cnt > 0); action=Open; PointAt=f_listcode; PointSide=runclient("left"); }
		    msg_on_deleted "widget/connector" { source=memb_info_osrc; event=EndQuery; event_condition=runclient(:memb_info_osrc:deleted_cnt > 0); target=popover_message; action=SetValue; Value=runclient("previously deleted on " + substring(:memb_info_osrc:deleted_last,1,11)); }
		    open_on_dup "widget/connector" { source=memb_info_osrc; event=EndQuery; event_condition=runclient(:memb_info_osrc:active_cnt > 0); action=Open; PointAt=f_listcode; PointSide=runclient("left"); }
		    msg_on_dup "widget/connector" { source=memb_info_osrc; event=EndQuery; event_condition=runclient(:memb_info_osrc:active_cnt > 0); target=popover_message; action=SetValue; Value=runclient("already subscribed"); }

		    close_on_form_change "widget/connector" { source=m_list_membership_form; event=ModeChange; action=Close; }
		    }

		}

	    add_membership_label_pane "widget/pane"
		{
		x=16; y=197; width=170;
		widget_class = label;
		add_membership_label "widget/label" { x=0;y=0;width=168;height=16;value=runclient("Add a Subscription"); widget_class="label"; }
		}

	    mem_info_grp "widget/pane"
		{
		x=330; y=205; width=320; height=133;
		widget_class = group;
		background="/apps/kardia/images/bg/light_bgnd3.jpg";

		member_info "widget/label"
		    {
		    x=4; y=12; width=312; height=120;

		    style=bold;
		    value=runclient(
			    condition(:memb_osrc:m_cancel_date is null, '', 'Canceled ' + substring(:memb_osrc:m_cancel_date,1,12) + ' because: ' + :memb_osrc:cancel_txt + '\n') +
			    condition(:memb_osrc:m_complimentary, 'Complimentary Subscription\n', 'Fee-based Subscription\n') +
			    condition(:memb_osrc:m_reason_member is null, '', 'Member because: ' + :memb_osrc:member_txt + '\n') +
			    condition(:memb_osrc:m_hold_until_date is null, '', 'Holding until ' + substring(:memb_osrc:m_hold_until_date,1,12) + '\n') +
			    condition(:memb_osrc:m_start_date is null, '', 'Start on ' + substring(:memb_osrc:m_start_date,1,12) + '\n') +
			    condition(:memb_osrc:m_end_date is null, '', 'End on ' + substring(:memb_osrc:m_end_date,1,12) + '\n') +
			    condition(:memb_osrc:m_renewal_date is null, '', 'Renewal reminder date ' + substring(:memb_osrc:m_renewal_date,1,12) + '\n') +
			    condition(:memb_osrc:m_notice_sent_date is null, '', 'Renewal notice sent on ' + substring(:memb_osrc:m_notice_sent_date,1,12) + '\n') +
			    condition(:memb_osrc:m_num_copies == 1, '', 'Receiving ' + :memb_osrc:m_num_copies + ' copies\n') +
			    condition(:memb_osrc:m_num_issues_sub is null, '', 'Subscribed for ' + :memb_osrc:m_num_issues_sub + ' issues, received ' + isnull(:memb_osrc:m_num_issues_recv, 0) + ' so far\n')
			    );
		    }
		}

	    mem_info_label_pane "widget/pane"
		{
		x=346; y=197; width=170;
		widget_class = label;
		mem_info_label "widget/label" { x=0;y=0;width=168;height=16;value=runclient("Subscription Info"); widget_class="label"; }
		}

	    btn_vbox "widget/vbox"
		{
		x=660; y=205; width=171; height=133;
		cellsize=24; spacing=4;

		details_btn "widget/textbutton"
		    {
		    width = 171;
		    height = 24;
		    enabled = runclient(not (:memb_osrc:p_partner_key is null));
		    text = "Subscription Detail";

		    details_cn "widget/connector"
			{
			event=Click;
			target=m_list_membership_component;
			action=Launch;
			Multi = 1;
			Source = runclient("/apps/kardia/modules/base/subscription.app");
			Width = 800;
			Height = 600;
			partner = runclient(:memb_osrc:p_partner_key);
			list = runclient(:memb_osrc:m_list_code);
			hist_id = runclient(:memb_osrc:m_hist_id);
			mlist_parent_osrc = memb_osrc;
			send_update = 1;
			}
		    }

		sep_line "widget/pane" { height=2; style=lowered; }

		renew_btn "widget/textbutton"
		    {
		    width = 171;
		    height = 24;
		    enabled = runclient(:memb_osrc:m_membership_status = 'C' or (not (:memb_osrc:m_end_date is null)) or not (:memb_osrc:m_num_issues_sub is null));
		    text = runclient(condition(:memb_osrc:m_membership_status = 'C', "Reactivate", "Renew"));
		    }

		cancel_btn "widget/textbutton"
		    {
		    width = 171;
		    height = 24;
		    enabled = runclient(:memb_osrc:m_cancel_date is null and not (:memb_osrc:p_partner_key is null));
		    text = "Cancel...";
		    cancel_sub_cn "widget/connector" { event=Click; target=cancel_sub_window; action=Open; }
		    }

		suspend_btn "widget/textbutton"
		    {
		    width = 171;
		    height = 24;
		    enabled = runclient(:memb_osrc:m_cancel_date is null and not (:memb_osrc:p_partner_key is null));
		    text = "Hold Until...";
		    hold_sub_cn "widget/connector" { event=Click; target=hold_sub_window; action=Open; }
		    }
		}
            }
        }

    hold_sub_window "widget/childwindow"
	{
	style=dialog;
	titlebar=no;
	modal=yes;
	toplevel=yes;
	width=480; height=300;
	x=175; y=20;
	visible=no;

	hold_vbox "widget/vbox"
	    {
	    x=10; y=10; width=458; height=278;
	    spacing=8;

	    hold_title "widget/label" { height=20; font_size=15; style=bold; align=center; text="Hold Subscription"; }

	    hold_line "widget/pane" { height=2; style=lowered; }

	    hold_date_lbl "widget/label" { text="Hold Until:"; height=20; }

	    hold_form "widget/form"
		{
		objectsource = memb_osrc;
		hold_date "widget/datetime"
		    {
		    width=300;
		    height=20;
		    fieldname=m_hold_until_date;
		    }
		}

	    hold_ctls_hbox "widget/hbox"
		{
		height=24; spacing=8;
		align=center;

		yeshold "widget/textbutton"
		    {
		    height=24; width=170;
		    text = runclient(condition(:hold_form:is_savable and :hold_date:value is null, "Remove Hold", "Hold Subscription"));
		    enabled = runclient(condition(:hold_form:is_savable));

		    yeshold_cn "widget/connector"
			{
			event=Click;
			target=hold_form;
			action=Save;
			}
		    yeshold_cn2 "widget/connector"
			{
			condition=0;
			event=Click;
			target=memb_osrc;
			action=Refresh;
			}
		    yeshold_cn3 "widget/connector"
			{
			event=Click;
			target=hold_sub_window;
			action=Close;
			}
		    }
		nohold "widget/textbutton"
		    {
		    height=24; width=170;
		    text = "Leave Unchanged";

		    nohold_cn "widget/connector" { event=Click; target=hold_sub_window; action=Close; }
		    }
		}
	    }
	}

    cancel_sub_window "widget/childwindow"
	{
	style=dialog;
	titlebar=no;
	modal=yes;
	toplevel=yes;
	width=480; height=300;
	x=175; y=20;
	visible=no;

	cancel_ui "widget/component"
	    {
	    x=10; y=10; width=458; height=278;
	    path="cancel_sub_ui.cmp";
	    subs_osrc = memb_osrc;
	    whom_text = runclient(:partner_osrc:disp_name);
	    }
	}
    }

$Version=2$
p_partner_component "widget/component-decl"
    {
    x=0;y=0;
    width=828;height=584;

    // If needing to pre-load a particular partner record, use this parameter.
    id "widget/parameter" { type=string; default=null; deploy_to_client=yes; }

    // Auto-executing a search query...
    search "widget/parameter" { type=string; default=null; deploy_to_client=yes; }

    // If a finance ledger context is available...
    ledger "widget/parameter" { type=string; default=null; deploy_to_client=yes; }

    page "widget/parameter" { type=object; find_container="widget/page"; }

    // Refresh if we make a change
    send_refresh "widget/parameter" { type=integer; default=0; deploy_to_client=yes; }
    send_refresh_to "widget/parameter" { type=object; deploy_to_client=yes; }

    // If pre-loading a record, trigger the osrc here.
    preload_primary_partner "widget/connector"
	{
	event_condition=runclient(char_length(:p_partner_component:id) > 0);
	event=LoadComplete;
	target=primary_partner_osrc;
	action=QueryParam;
	p_partner_key=runclient(:p_partner_component:id);
	}

    // If not pre-loading, open up the search window
    open_search_first "widget/connector"
	{
	event_condition=runclient(not (char_length(:p_partner_component:id) > 0));
	event=LoadComplete;
	target=partner_search_window;
	action=Open;
	}

    // This osrc holds the record for the "primary partner" being displayed
    primary_partner_osrc "widget/osrc"
	{
	sql = runserver("
		SELECT
			*
		FROM
			/apps/kardia/data/Kardia_DB/p_partner/rows
		ORDER BY
			:p_partner_key
		");
        baseobj = "/apps/kardia/data/Kardia_DB/p_partner/rows";
	replicasize = 10;
	readhead = 5;
	autoquery = never;

	auto_edit_on_create "widget/connector"
	    {
	    event=Created;
	    target=p_partner_form;
	    action=Edit;
	    event_delay=0.50;
	    }
	}

    p_partner_osrc "widget/osrc"
        {
        sql="	SELECT
			:p_partner_key, :p_creating_office, :p_parent_key, :p_partner_class, :p_status_code, :p_status_change_date,
			:p_title, :p_given_name, :p_preferred_name, :p_surname, :p_surname_first, :p_localized_name, :p_org_name, :p_gender,
			:p_language_code, :p_acquisition_code, :p_comments, :p_record_status_code, :p_no_solicitations, :p_no_mail,
			:p_no_mail_reason,
			:p_cost_center, :p_best_contact, :p_merged_with, :p_legacy_key_1, :p_legacy_key_2, :p_legacy_key_3, :p_suffix,
			:s_date_created, :s_created_by, :s_date_modified, :s_modified_by, :__cx_osml_control,
			disp_name = condition(char_length(rtrim(:p_org_name)) > 0, :p_org_name + ' ' + condition(char_length(:p_given_name + :p_surname) > 0, '- ', ''), '') + isnull(:p_given_name + ' ','') + isnull(:p_surname + ' ','') + condition(isnull(:p_merged_with,'X') = :parameters:param_id, '(old; merged)', '') + condition(:p_partner_key = :parameters:param_merge, '(new; merged into)', ''),
			disp_ico = '/apps/kardia/images/icons/' + condition(:p_partner_class == 'IND', 'person.gif', 'group.gif')
		FROM
			/apps/kardia/data/Kardia_DB/p_partner/rows
		WHERE
			(:p_partner_key = :parameters:param_id or			-- the 'primary' record
			:p_partner_key = :parameters:param_parent or			-- the parent of the record
			isnull(:p_parent_key,'X') = :parameters:param_id or		-- children of the record
			isnull(:p_parent_key,'X') = :parameters:param_parent or		-- siblings (shared parent) of the record
			isnull(:p_merged_with,'X') = :parameters:param_id or		-- obsolete rec merged with this one
			:p_partner_key = :parameters:param_merge) and			-- this rec is obs; merged with record...
			convert(integer, :p_partner_key) > 0
		ORDER BY
			charindex('*' + rtrim(:p_partner_key) + '*', '*' + :parameters:param_id + '*') desc,
			charindex('*' + rtrim(:p_partner_key) + '*', '*' + :parameters:param_parent + '*') desc,
			charindex('*' + rtrim(:p_parent_key) + '*', '*' + :parameters:param_id + '*') desc,
			charindex('*' + rtrim(:p_parent_key) + '*', '*' + :parameters:param_parent + '*') desc,
			convert(integer,:p_partner_key)
		";
        baseobj = "/apps/kardia/data/Kardia_DB/p_partner/rows";
        replicasize=20;
        readahead=10;
        autoquery = never;

	param_id "widget/parameter" { type=string; default=null; }
	param_parent "widget/parameter" { type=string; default=null; }
	param_merge "widget/parameter" { type=string; default=null; }

	partner_sync "widget/rule"
	    {
	    ruletype = osrc_relationship;
	    target = primary_partner_osrc;
	    key_1 = param_id;
	    key_2 = param_parent;
	    key_3 = param_merge;
	    target_key_1 = p_partner_key;
	    target_key_2 = p_parent_key;
	    target_key_3 = p_merged_with;
	    }

        ConfirmWindow "widget/childwindow"
            {
            title = "Data Was Modified!";
            titlebar = yes;
            hdr_bgcolor="#c00000";
            bgcolor= "#e0e0e0";
            visible = false;
            style = dialog;
            x=200;y=200;width=300;height=140;

            warninglabel "widget/label"
                {
                x=10;y=10;width=276;height=30;
                text="Some data was modified.  Do you want to save it first, discard your modifications, or simply cancel the operation?";
                }

            _3bConfirmSave "widget/textbutton"
                {
                x=10;y=75;width=80;height=30;
                tristate=no;
                background="/sys/images/grey_gradient.png";
                text = "Save";
                fgcolor1=black;fgcolor2=white;
                }
            _3bConfirmDiscard "widget/textbutton"
                {
                x=110;y=75;width=80;height=30;
                tristate=no;
                background="/sys/images/grey_gradient.png";
                text = "Discard";
                fgcolor1=black;fgcolor2=white;
                }
            _3bConfirmCancel "widget/textbutton"
                {
                x=210;y=75;width=80;height=30;
                tristate=no;
                background="/sys/images/grey_gradient.png";
                text = "Cancel";
                fgcolor1=black;fgcolor2=white;
                }
            }

        p_partner_form "widget/form"
            {
            _3bconfirmwindow = "ConfirmWindow";
            bgcolor = "#e0e0e0";
	    allow_new = no;
	    allow_query = no;

	    partner_key_internal "widget/variable" { fieldname=p_partner_key; type=string; }

	    send_refresh_on_save "widget/connector"
		{
		condition=runserver(:this:send_refresh);
		event=DataSaved;
		//event_condition=runclient(:p_partner_component:send_refresh);
		target=send_refresh_to;
		action=Refresh;
		}

	    p_partner_vbox "widget/vbox"
		{
		x=0;y=0;width=828;height=584;
		spacing=4;

		label_and_tools "widget/hbox"
		    {
		    height=20;
		    spacing=4;

		    partner_label "widget/label"
			{
			width=600;
			font_size=14;
			style=bold;
			fgcolor="#153f5f";
			
			value = runclient(condition(:p_partner_form:form_mode != 'NoData', condition(:p_partner_form:form_mode == 'New', '** Create New Partner **', condition(:p_partner_form:form_mode == 'Modify' and char_length(rtrim(isnull(:p_partner_osrc:p_org_name,'') + isnull(:p_partner_osrc:p_surname,'') + isnull(:p_partner_osrc:p_given_name,''))) == 0,"** Create New Partner **" , condition(char_length(:p_partner_osrc:p_org_name) > 0, :p_partner_osrc:p_org_name + ' ' + condition(char_length(:p_partner_osrc:p_given_name + :p_partner_osrc:p_surname) > 0, '- ', ''), '') + isnull(:p_partner_osrc:p_title + ' ','') + isnull(:p_partner_osrc:p_given_name + ' ','') + isnull(:p_partner_osrc:p_surname + ' ','') + '')), '** None Selected **'));
			}

		    prev_srch_btn "widget/imagebutton"
			{
			y=1;
			width=18; height=18;
			image="/sys/images/ico16ba.gif";
			pointimage="/sys/images/ico16bb.gif";
			clickimage="/sys/images/ico16bc.gif";
			disabledimage="/sys/images/ico16bd.gif";
			tooltip = runserver("Previous Search Result");
			enabled = runclient(not :p_partner_form:is_savable);
			//enabled = runclient(:p_partner_form:is_queryable);

			prev_srch_cn "widget/connector" { event=Click; target=partner_search_component; action=PrevResult; }
			}

		    search_btn "widget/imagebutton"
			{
			y=1;
			width=18; height=18;
			image="/sys/images/ico21a.gif";
			pointimage="/sys/images/ico21b.gif";
			clickimage="/sys/images/ico21c.gif";
			disabledimage="/sys/images/ico21d.gif";
			tooltip = runserver("Search for Partners");
			enabled = runclient(not :p_partner_form:is_savable);

			search_cn "widget/connector" { event=Click; target=partner_search_window; action=Open; IsModal=1; }
			}

		    next_srch_btn "widget/imagebutton"
			{
			y=1;
			width=18; height=18;
			image="/sys/images/ico16ca.gif";
			pointimage="/sys/images/ico16cb.gif";
			clickimage="/sys/images/ico16cc.gif";
			disabledimage="/sys/images/ico16cd.gif";
			tooltip = runserver("Next Search Result");
			enabled = runclient(not :p_partner_form:is_savable);
			//enabled = runclient(:p_partner_form:is_queryable);

			next_srch_cn "widget/connector" { event=Click; target=partner_search_component; action=NextResult; }
			}

		    toolbar_sp1 "widget/autolayoutspacer" { width=8; }

		    edit_btn "widget/component"
			{
			condition = 0;
			y=1;
			width=18; height=18;
			path = "/sys/cmp/edit_btn.cmp";
			}
		    save_btn "widget/component"
			{
			y=1;
			width=18; height=18;
			path = "/sys/cmp/save_btn.cmp";
			save_mode=osrc;
			}
		    cancel_btn "widget/component"
			{
			y=1;
			width=18; height=18;
			path = "/sys/cmp/cancel_btn.cmp";
			cancel_mode = osrc;
			}

		    toolbar_sp2 "widget/autolayoutspacer" { width=8; }

		    formstat "widget/formstatus"
			{
			y=0;
			height=20; width=90;
			style=largeflat;
			form=p_partner_form;
			}
		    }

		sep_line "widget/pane"
		    {
		    height=5;
		    style=lowered;
		    background="/apps/kardia/images/bg/light_bgnd3.jpg";
		    }
		sep_line_bot "widget/autolayoutspacer" { height=4; }

		p_partner_hbox "widget/hbox"
		    {
		    height=140;
		    spacing=10;

		    partner_fields "widget/component"
			{
			width=610;
			path="/apps/kardia/modules/base/p_partner_fields.cmp";
			}

		    related_pane "widget/pane"
			{
			width=208;
			widget_class = "table_bgnd";
			related_table "widget/table"
			    {
			    x=0; y=0;
			    width=206;
			    height=138;
			    mode=dynamicrow;
			    rowheight = 20;
			    overlap_scrollbar = yes;
			    demand_scrollbar = yes;
			    colsep = 0;

			    ico "widget/table-column" { width=22; title = ""; fieldname = disp_ico; type=image; }
			    nm "widget/table-column" { width=188; title = "Related Partners:"; fieldname = disp_name; }
			    }
			}
                    }

		sep_line2_bot "widget/autolayoutspacer" { height=8; }

                Partner_MainTabPage "widget/tab"
                    {
                    height = 360;
                    selected = "partner_address_tab";
		    background="/apps/kardia/images/bg/light_bgnd2.jpg";
		    inactive_background="/apps/kardia/images/bg/light_bgnd3.jpg";
                    partner_address_tab "widget/tabpage"
                        {
                        title = "Address/Contact";
                        textcolor = black;

            		person_location_cmp "widget/component"
                            {
                            path="/apps/kardia/modules/base/p_location.cmp";
                            x=10; y=10; width=806; height=338;
			    send_refresh = runserver(:this:send_refresh);
			    send_refresh_to = send_refresh_to;
                            }
                        }
                    partner_rest_tab "widget/tabpage"
                        {
                        title = "Advanced...";
                        textcolor = black;
                        x=0; y=0; width=835; height=428;
			p_partner_adv_vbox1 "widget/vbox"
			    {
			    x=10;y=10;cellsize=20; spacing=4;
			    height=338;
			    width=300;

			    locale_hdr "widget/component" { path="/apps/kardia/modules/base/section_label.cmp"; text="National / Local Info"; }
			    p_language_code_cmp "widget/component" { path="/sys/cmp/smart_field.cmp"; field=p_language_code; text="Language:"; ctl_type="editbox"; form=p_partner_form; tooltip="The Partners Language"; }
			    localized_name_cmp "widget/component" { path="/sys/cmp/smart_field.cmp"; field=p_localized_name; text="Localized Name:"; ctl_type="editbox"; form=p_partner_form; tooltip="The name as written in the partners national language"; }
			    p_surname_first_cmp "widget/component" { path="/sys/cmp/smart_field.cmp"; field=p_surname_first; text="Last Name First:"; ctl_type="checkbox"; form=p_partner_form; tooltip="Is the Last Name (Surname) listed first as in many countries"; sur_first_hints "widget/hints" { default=runclient(0); } }
			    sep00 "widget/autolayoutspacer" { height=4; }
			    legacy_hdr "widget/component" { path="/apps/kardia/modules/base/section_label.cmp"; text="Legacy System"; }
			    p_legacy_key_1_cmp "widget/component" { path="/sys/cmp/smart_field.cmp"; field=p_legacy_key_1; text=runserver(isnull( (select :s_config_value from /apps/kardia/data/Kardia_DB/s_config/rows where :s_config_name = 'PtnrSpecField1'), 'Legacy Key 1') + ':'); ctl_type="editbox"; form=p_partner_form; tooltip=runserver('Legacy Value - ' + isnull( (select :s_config_value from /apps/kardia/data/Kardia_DB/s_config/rows where :s_config_name = 'PtnrSpecField1'), 'Legacy Key 1')); }
			    p_legacy_key_2_cmp "widget/component" { path="/sys/cmp/smart_field.cmp"; field=p_legacy_key_2; text=runserver(isnull( (select :s_config_value from /apps/kardia/data/Kardia_DB/s_config/rows where :s_config_name = 'PtnrSpecField2'), 'Legacy Key 2') + ':'); ctl_type="editbox"; form=p_partner_form; tooltip=runserver('Legacy Value - ' + isnull( (select :s_config_value from /apps/kardia/data/Kardia_DB/s_config/rows where :s_config_name = 'PtnrSpecField2'), 'Legacy Key 2')); }
			    p_legacy_key_3_cmp "widget/component" { path="/sys/cmp/smart_field.cmp"; field=p_legacy_key_3; text=runserver(isnull( (select :s_config_value from /apps/kardia/data/Kardia_DB/s_config/rows where :s_config_name = 'PtnrSpecField3'), 'Legacy Key 3') + ':'); ctl_type="editbox"; form=p_partner_form; tooltip=runserver('Legacy Value - ' + isnull( (select :s_config_value from /apps/kardia/data/Kardia_DB/s_config/rows where :s_config_name = 'PtnrSpecField3'), 'Legacy Key 3')); }
			    sep01 "widget/autolayoutspacer" { height=4; }
			    addl_hdr "widget/component" { path="/apps/kardia/modules/base/section_label.cmp"; text="Additional..."; }
			    p_best_contact_cmp "widget/component" { path="/sys/cmp/smart_field.cmp"; field=p_best_contact; text="Best Contact:"; ctl_type="editbox"; form=p_partner_form; tooltip="Best contact"; }
			    p_acquisition_code_cmp "widget/component" { path="/sys/cmp/smart_field.cmp"; field=p_acquisition_code; text="Acquisition:"; ctl_type="editbox"; form=p_partner_form; tooltip="How the partner was acquired"; }
			    }

			p_partner_adv_vbox2 "widget/vbox"
			    {
			    x=326; y=10; cellsize=20; spacing=4;
			    height=338;
			    width=300;

			    recinfo_hdr "widget/component" { path="/apps/kardia/modules/base/section_label.cmp"; text="Record Information"; }
			    p_record_status_cmp "widget/component" { path="/sys/cmp/smart_field.cmp"; form=p_partner_form; field=p_record_status_code; text="Record Status:"; sql="select :text, :tag from /apps/kardia/data/Kardia_DB/_p_record_status/rows"; tooltip="The status of the record"; ctl_type="dropdown"; rec_stat_hints "widget/hints" { default=runclient('A'); } }
			    p_status_change_date_cmp "widget/component" { path="/sys/cmp/smart_field.cmp"; field=p_status_change_date; text="Status Change:"; ctl_type="datetime"; form=p_partner_form; tooltip="Date of the last status change";}
			    p_creating_office_cmp "widget/component" { path="/sys/cmp/smart_field.cmp"; field=p_creating_office; text="Creating Office:"; ctl_type="editbox"; form=p_partner_form; tooltip="This is the office which created the record"; creating_ofc_hints "widget/hints" { default=runclient('USA'); } }
			    p_merged_with_cmp "widget/component" { path="/sys/cmp/smart_field.cmp"; field=p_merged_with; text="Merged With:"; ctl_type="editbox"; form=p_partner_form; tooltip="The partner this partner was merged with." ; }
			    p_parent_key_cmp "widget/component" { path="/sys/cmp/smart_field.cmp"; field=p_parent_key; text="Parent Key:"; ctl_type="editbox"; form=p_partner_form; tooltip="For hierarcies of various sorts"; }
			    s_date_created_cmp "widget/component" { path="/sys/cmp/smart_field.cmp"; field=s_date_created; text="Date Created:"; ctl_type="datetime"; type="create"; form=p_partner_form; tooltip="The date the record was created."; }
			    s_created_by_cmp "widget/component" { path="/sys/cmp/smart_field.cmp"; field=s_created_by; text="Created By:"; ctl_type="editbox"; type="create"; form=p_partner_form; tooltip="The user who created the partner record" ; }
			    s_date_modified_cmp "widget/component" { path="/sys/cmp/smart_field.cmp"; field=s_date_modified; text="Date Modified:"; ctl_type="datetime"; type="modify"; form=p_partner_form; tooltip="The date the record was created."; }
			    s_modified_by_cmp "widget/component" { path="/sys/cmp/smart_field.cmp"; field=s_modified_by; text="Modified By:"; ctl_type="editbox"; type="modify"; form=p_partner_form; tooltip="The user who modified the partner record" ; }
			    }
                        }
                    person_class_tab "widget/tabpage"
                        {
                        title = "Person";
                        textcolor = black;
                        x=0; y=0; width=833; height=338;
			visible = runclient( :p_partner_osrc:p_partner_class = 'IND' );
                        person_person_cmp "widget/component"
                            {
                            path="/apps/kardia/modules/base/p_person.cmp";
                            x=0; y=0; width=831; height=338;
                            sync_osrc = p_partner_osrc;
                            }
			}
                    church_class_tab "widget/tabpage"
                        {
                        title = "Church";
                        textcolor = black;
                        x=0; y=0; width=833; height=338;
			visible = runclient( :p_partner_osrc:p_partner_class == 'CHU' );
                        person_church_cmp "widget/component"
                            {
                            path="/apps/kardia/modules/base/p_church.cmp";
                            x=0; y=0; width=831; height=338;
                            sync_osrc = p_partner_osrc;
                            }
                        }
                    person_relationship_tab "widget/tabpage"
                        {
			condition = 0;
                        title = "Relationships";
                        textcolor = black;
                        x=0; y=0; width=835; height=338;
                        person_relationship_cmp "widget/component"
                            {
                            path="/apps/kardia/modules/base/p_partner_relationship.cmp";
                            x=0; y=0; width=831; height=338;
                            sync_osrc = p_partner_osrc;

			    cnPartnerRelationshipSelected "widget/connector"
				{
				event="PartnerSelected";
				action="QueryParam";
				target="p_partner_osrc";
				p_partner_key = runclient(:partner_key);
				}
                            }
			}

		    plugin_tabs "widget/repeat"
			{
			sql = "select path = :cx__pathname, module = :cx__pathpart4, component = :cx__pathpart5, :title from object wildcard '/apps/kardia/modules/*/plugin_base_partneredit_*.cmp'";

			plugin_tab "widget/tabpage"
			    {
			    title = runserver(:plugin_tabs:title);

			    plugin_cmp "widget/component"
				{
				height=338; width=808; x=10; y=10;
				path = runserver(:plugin_tabs:path);
				partner_osrc = p_partner_osrc;
				ledger = runserver(:this:ledger);
				}
			    }
			}
                    }
                }
            }
        }

    partner_search_window "widget/childwindow"
        {
        x=53;y=45;
        height=494; width=722;
        visible=false;
        toplevel = yes;
        style = dialog;
	bgcolor = "#e0e0e0";
	titlebar = no;
	modal = yes;
	//title = "Partner Search";
	//icon = "/apps/kardia/images/icons/person-search.gif";
        partner_search_component "widget/component"
            {
            x=10;y=10;
            height=472; width=700;
            path="/apps/kardia/modules/base/partner_search.cmp";
	    sync_osrc=p_partner_osrc;
	    sync_form=p_partner_form;
	    auto_search=runserver(:this:search);

	    cnParterSelected "widget/connector"
	        {
	        event="PartnerSelected";
	        action="QueryParam";
	        target="primary_partner_osrc";
		p_partner_key = runclient(:partner_key);
	        }

	    cnCreateNewPartner "widget/connector"
		{
		event=PartnerNew;
		target=page;
		action=LoadPage;
		ledger = runclient(:p_partner_component:ledger);
		Source="/apps/kardia/modules/base/new_partner.app";
		}

	    cnCloseMe "widget/connector"
		{
		event="CloseMe";
		action=SetVisibility; 
		IsVisible=0;
		target="partner_search_window";
		}

	    onCancelSearch "widget/connector"
		{
		event=PartnerCancel;
		event_condition=runclient(:p_partner_form:form_mode == 'NoData');
		target=page;
		action=Close;
		}
            }
        }

    nextpartner "widget/component"
	{
	condition = 0;
	path = "/apps/kardia/modules/base/next_partner.cmp";

	got_key "widget/connector"
	    {
	    event=PartnerKey;
	    target=primary_partner_osrc;
	    action=Create;
	    p_partner_key=runclient(:p_partner_key);
	    p_creating_office=runclient('');
	    p_status_code=runclient('A');
	    p_partner_class=runclient('HOU');
	    p_record_status_code=runclient('A');
	    p_surname_first=runclient(0);
	    p_no_solicitations=runclient(0);
	    p_no_mail=runclient(0);
	    s_date_created=runclient(getdate());
	    s_created_by=runclient(user_name());
	    s_date_modified=runclient(getdate());
	    s_modified_by=runclient(user_name());
	    }
	}
    }


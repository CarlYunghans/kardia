$Version=2$
pay_detail_cmp "widget/component-decl"
    {
    width=778; height=525;

    ledger "widget/parameter" { type=string; default=null; allowchars="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"; deploy_to_client = yes; }
    by_item_type "widget/parameter" { type=integer; default=0; }
    item_type "widget/parameter" { type=string; default=null; deploy_to_client=yes; }

    GotoPayee "widget/component-decl-action" { }
    GotoItemType "widget/component-decl-action" { }

    GotoPayee_cn "widget/connector"
	{
	condition=runserver(:this:by_item_type == 0);
	event=GotoPayee;
	target=payee_osrc;
	action=QueryParam;
	a_payroll_id = runclient(:Payee);
	a_payroll_group_id = runclient(:Group);
	}

    GotoItemType_cn "widget/connector"
	{
	condition=runserver(:this:by_item_type != 0);
	event=GotoItemType;
	target=itemtypes_osrc;
	action=FindObject;
	Name = runclient(:pay_detail_cmp:ledger + '|' + :ItemType);
	//a_payroll_item_type_code = runclient(:ItemType);
	//a_ledger_number = runclient(:pay_detail_cmp:ledger);
	}

    ledger_osrc "widget/osrc"
	{
	l_ledger "widget/parameter" { type=string; default=runserver(:this:ledger); }
	sql = runserver("select * from /apps/kardia/data/Kardia_DB/a_ledger/rows where :a_ledger_number = :parameters:l_ledger");
	baseobj = "/apps/kardia/data/Kardia_DB/a_ledger/rows";
	replicasize=10;
	readahead=5;
	autoquery = onload;
	}

    payee_osrc "widget/osrc"
	{
	condition=runserver(:this:by_item_type == 0);
	payee_pid "widget/parameter" { param_name=a_payroll_id; type=integer; default=null; }
	payee_gid "widget/parameter" { param_name=a_payroll_group_id; type=integer; default=null; }

	sql = "SELECT :a:a_cost_center, :a:a_ledger_number, :a:a_payroll_id, :a:a_payroll_group_id, ptxt = condition(char_length(:a:a_payee_name) > 0, :a:a_payee_name, :p:p_surname + ', ' + :p:p_given_name), startdate = '' + datepart(month, :a_start_date) + '/' + datepart(day, :a_start_date) + '/' + datepart(year, :a_start_date), enddate = '' + datepart(month, :a_end_date) + '/' + datepart(day, :a_end_date) + '/' + datepart(year, :a_end_date) FROM IDENTITY /apps/kardia/data/Kardia_DB/a_payroll/rows a, /apps/kardia/data/Kardia_DB/p_partner/rows p  WHERE :p:p_partner_key = :a:p_payee_partner_key and :a:a_payroll_id = :parameters:a_payroll_id and :a:a_payroll_group_id = :parameters:a_payroll_group_id";
	baseobj = "/apps/kardia/data/Kardia_DB/a_payroll/rows";
	autoquery=never;
	replicasize=10;
	readahead=10;

	set_dd "widget/connector"
	    {
	    event=EndQuery;
	    target=f_a_costctr;
	    action=SetItems;
	    SQL=runclient("select label=:a_cost_center + ' - ' + :a_cc_desc, value=:a_cost_center from /apps/kardia/data/Kardia_DB/a_cost_center/rows where :a_bal_cost_center = " + quote(:payee_osrc:a_cost_center) + " and :a_ledger_number = " + quote(:ledger_osrc:a_ledger_number));
	    }
	}

    payee_lbl "widget/label"
	{
	condition=runserver(:this:by_item_type == 0);
	x=8;y=0;width=562;height=24;
	align=left;
	style=bold;
	font_size=16;
	value = runclient(isnull('Payroll: ' + :payee_osrc:ptxt + ' (' + isnull(:payee_osrc:startdate, '') + ' - ' + isnull(:payee_osrc:enddate, '') + ')', ''));
	}

    itemtypes_osrc "widget/osrc"
	{
	condition=runserver(:this:by_item_type != 0);
	sql=runserver("select :name, txt = :a_payroll_item_type_code  + ' - ' + :a_desc + ' (' + :a_payroll_item_class_code + ')', :a_payroll_item_type_code, :a_ledger_number from /apps/kardia/data/Kardia_DB/a_payroll_item_type/rows where :a_ledger_number = " + quote(:this:ledger)); 
	replicasize=50;
	readahead=50;
	autoquery=onload;

	pre_sel "widget/connector"
	    {
	    condition=runserver(not (:this:item_type is null));
	    event=EndQuery;
	    target=itemtypes_osrc;
	    action=FindObject;
	    Name=runclient(:pay_detail_cmp:ledger + '|' + :pay_detail_cmp:item_type);
	    }

	f_typ "widget/dropdown"
	    { 
	    x=8;y=4;width=200;height=20;
	    mode=objectsource;
	    fieldname=txt;
	    numdisplay=12;
	    tooltip="Line Item Type";
	    onchange "widget/connector" { event=DataChange; target=payitem_tab; action=SetTab; Tab=runclient(isnull(substring(:Label, charindex('(', :Label) + 1, 1), 'XX')); }
	    onchange2 "widget/connector" { event=DataChange; event_condition=runclient(charindex('(T)', :Label) > 0); target=f_t_status; action=SetItems; SQL=runclient("select label=:a_desc, value=:a_filing_status from /apps/kardia/data/Kardia_DB/a_tax_filingstatus/rows where :a_payroll_item_type_code = " + quote(substring(:Value, 1, charindex(' ', :Value) - 1))); }
	    onchange3 "widget/connector" { event=DataChange; event_condition=runclient(charindex('(E)', :Label) > 0); target=f_e_status; action=SetItems; SQL=runclient("select label=:a_desc, value=:a_filing_status from /apps/kardia/data/Kardia_DB/a_tax_filingstatus/rows where :a_payroll_item_type_code = " + quote(substring(:Value, 1, charindex(' ', :Value) - 1))); }
	    }
	}

    periods_osrc "widget/osrc"
	{
	periods_ledger "widget/parameter" { param_name=ledger; type=string; default=runserver(:this:ledger); }
	sql = runserver("
		SELECT	a_period=null, a_period_desc=null, a_ledger_number=" + quote(:this:ledger) + ", txt='Template';

		SELECT
			:p:a_period, :p:a_period_desc, :p:a_ledger_number, txt=:p:a_period + ' - ' + :p:a_period_desc
		FROM
			/apps/kardia/data/Kardia_DB/a_period/rows p
		WHERE
			:p:a_summary_only = 0 and :p:a_ledger_number = :parameters:ledger
		ORDER BY
			:p:a_period desc");
	replicasize=50;
	readahead=50;
	autoquery=onload;

	period_form "widget/form" { }

	ctls_hbox "widget/hbox"
	    {
	    x=570; y=4; width=200;height=20;
	    spacing=4;

	    periods_label "widget/label"
		{
		condition = 0;
		width=120;
		y=1;
		text = "i18n:Select Period:";
		align=right;
		style=bold;
		}
	    periods_select "widget/dropdown"
		{
		width=200;
		mode=objectsource;
		fieldname=txt;
		numdisplay=12;
		}
	    }

	//period_select_cn "widget/connector" { event=DataFocusChanged; target=payee_osrc; action=QueryParam; a_period=runclient(:periods_osrc:a_period); a_payroll_id=runclient(:payee_osrc:a_payroll_id); }
	}

    payitem_osrc "widget/osrc"
	{
	sql = runserver("SELECT :i:a_payroll_id, :i:a_payroll_group_id, :p:a_payee_name, txt = isnull(' CostCtr: ' + :i:a_ref_cost_center,'') + isnull(' Acct: ' + :i:a_ref_account_code,'') + isnull(' XfrCostCtr: ' + :i:a_xfer_cost_center,'') + isnull(' XfrAcct: ' + :i:a_xfer_account_code,'') + isnull(' Min: ' + :i:a_minimum_amount,'') + isnull(' Allowances: ' + :i:a_allowances,'') + isnull(' DepAllow: ' + :i:a_dependent_allowances,'') + isnull(' Status: ' + :fs:a_desc, ''), :i:a_target_amount, :i:a_minimum_amount, :i:a_filing_status, startdate = '' + datepart(month, :a_start_date) + '/' + datepart(day, :a_start_date) + '/' + datepart(year, :a_start_date), :a_start_date, :a_end_date, :a_allowances, :a_dependent_allowances, a_fs_desc = :fs:a_desc, :i:a_ref_cost_center, a_xfer_cost_center = isnull(:i:a_xfer_cost_center, :it:a_xfer_cost_center), a_ref_account_code = isnull(:i:a_ref_account_code, :it:a_ref_account_code), a_xfer_account_code = isnull(:i:a_xfer_account_code, :it:a_xfer_account_code), :i:a_payroll_item_type_code, :it:a_desc, :it:a_payroll_item_class_code, :s_date_modified, :s_modified_by, :s_date_created, :s_created_by  FROM IDENTITY /apps/kardia/data/Kardia_DB/a_payroll_item/rows i, /apps/kardia/data/Kardia_DB/a_payroll_item_type/rows it, /apps/kardia/data/Kardia_DB/a_tax_filingstatus/rows fs, /apps/kardia/data/Kardia_DB/a_payroll/rows p  WHERE :i:a_payroll_item_type_code *= :it:a_payroll_item_type_code and :it:a_ledger_number = " + quote(:this:ledger) + " and :i:a_filing_status *= :fs:a_filing_status and :i:a_payroll_item_type_code *= :fs:a_payroll_item_type_code and :p:a_ledger_number = " + quote(:this:ledger) + " and :p:a_payroll_id = :i:a_payroll_id and :p:a_payroll_group_id = :i:a_payroll_group_id");
	baseobj = "/apps/kardia/data/Kardia_DB/a_payroll_item/rows";
	autoquery=never;
	replicasize=50;
	readahead=25;

	itemtype_sync "widget/rule"
	    {
	    condition=runserver(:this:by_item_type != 0);
	    ruletype = "osrc_relationship";
	    target = itemtypes_osrc;
	    is_slave = yes;
	    key_1 = a_payroll_item_type_code;
	    target_key_1 = a_payroll_item_type_code;
	    key_2 = a_ledger_number;
	    target_key_2 = a_ledger_number;
	    revealed_only = true;
	    }

	payee_sync "widget/rule"
	    {
	    condition=runserver(:this:by_item_type == 0);
	    ruletype = "osrc_relationship";
	    target = payee_osrc;
	    is_slave = yes;
	    key_1 = a_ledger_number;
	    target_key_1 = a_ledger_number;
	    key_2 = a_payroll_id;
	    target_key_2 = a_payroll_id;
	    key_3 = a_payroll_group_id;
	    target_key_3 = a_payroll_group_id;
	    revealed_only = true;
	    }

	period_sync "widget/rule"
	    {
	    ruletype = "osrc_relationship";
	    target = periods_osrc;
	    is_slave = yes;
	    key_1 = a_period;
	    target_key_1 = a_period;
	    revealed_only = true;
	    }

	payitem_list_pane "widget/pane"
	    {
	    x=8;y=32;width=762;height=254;
	    widget_class = "table_bgnd";

	    payitem_list "widget/table"
		{
		x=0;y=0;width=760;height=252;
		rowheight = 18;
		mode=dynamicrow;

		t_valid "widget/table-column" { title="i18n:Valid From"; fieldname="startdate"; width=70; }
		t_typ "widget/table-column" { condition=runserver(:this:by_item_type == 0); title="i18n:Line Item Type"; fieldname="a_desc"; width=140; }
		t_payee "widget/table-column" { condition=runserver(:this:by_item_type != 0); title="i18n:Payee"; fieldname="a_payee_name"; width=140; }
		t_group "widget/table-column" { condition=runserver(:this:by_item_type != 0); title="i18n:Grp"; fieldname="a_payroll_group_id"; width=30; }
		t_amt "widget/table-column" { title="i18n:Target Amount"; fieldname="a_target_amount"; width=100; align=right; }
		t_txt "widget/table-column" { title="i18n:Details"; fieldname="txt"; width=390; }
		}
	    }

	payitem_form "widget/form"
	    {
	    tab_revealed_only = true;

	    payitem_ctls "widget/component"
		{
		x=8;y=294;width=762;height=26;
		path = "/sys/cmp/form_controls.cmp";
		deletable = no;
		object_name = "Pay Item";
		}

	    payitem_costctr "widget/variable"
		{
		fieldname=a_ref_cost_center;

		set_def_cc "widget/connector"
		    {
		    source=payitem_form;
		    event=BeforeSave;
		    event_condition=runclient((not (char_length(:f_a_costctr:value) > 0)) and (not (char_length(:f_m_ref_cc:content) > 0)) and (not (char_length(:f_r_ref_cc:content) > 0)));
		    action=SetValue;
		    Value=runclient(:payee_osrc:a_cost_center);
		    }
		}

	    payee_osrc "widget/osrc"
		{
		condition=runserver(:this:by_item_type != 0);

		sql = runserver("SELECT :a_cost_center, :a_ledger_number, :a_payroll_id, :a_payroll_group_id FROM /apps/kardia/data/Kardia_DB/a_payroll/rows a  WHERE :a:a_ledger_number = " + quote(:this:ledger));
		baseobj = "/apps/kardia/data/Kardia_DB/a_payroll/rows";
		autoquery=never;
		replicasize=10;
		readahead=10;
		}

	    payitem_is_instance "widget/variable" { fieldname=a_is_instance; payitem_is_instance_hnt "widget/hints" { style=readonly; default=runclient(condition(:periods_osrc:a_period is null, 0, 1)); } }

	    payitem_vbox "widget/vbox"
		{
		x=8;y=328;width=200;height=150;
		spacing=2;
		cellsize=20;

		f_from_lbl "widget/label" { text="i18n:Valid From:"; }
		f_from "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_start_date; ctl_type="datetime"; tooltip="i18n:Date that this payroll entry begins to be valid"; label_width=0; }
		f_to_lbl "widget/label" { text="i18n:Valid To:"; }
		f_to "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_end_date; ctl_type="datetime"; tooltip="i18n:Last day that this payroll entry is valid"; label_width=0; }
		f_payeename_lbl "widget/label" 
		    {
		    condition=runserver(:this:by_item_type != 0);
		    text="i18n:Payee Name:";
		    }
		f_payeename "widget/component"
		    { 
		    condition=runserver(:this:by_item_type != 0);
		    path="/sys/cmp/smart_field.cmp";
		    field=a_payroll_id; 
		    ctl_type="dropdown";
		    tooltip="i18n:Payee";
		    label_width=0;
		    sql=runserver("select :a_payee_name + ' (Grp ' + :a_payroll_group_id + ')', :a_payroll_id from /apps/kardia/data/Kardia_DB/a_payroll/rows where :a_ledger_number = " + quote(:this:ledger) + " order by :a_payee_name"); 

		    on_p_change "widget/connector" { event=DataChange; target=payee_osrc; action=QueryParam; a_payroll_id=runclient(:Value); a_payroll_group_id = runclient(convert(integer, substring(:Label, charindex('(Grp ', :Label) + 5))); }
		    on_p_change2 "widget/connector" { event=DataChange; event_condition=runclient(:FromOSRC == 0); target=f_grp_id; action=SetValue; Value = runclient(convert(integer, substring(:Label, charindex('(Grp ', :Label) + 5))); }
		    }
		f_grp_id "widget/variable"
		    {
		    condition=runserver(:this:by_item_type != 0);
		    fieldname=a_payroll_group_id;
		    type=integer;
		    }
		f_typ_lbl "widget/label" 
		    {
		    condition=runserver(:this:by_item_type == 0);
		    text="i18n:Type:";
		    }
		f_typ "widget/component"
		    { 
		    condition=runserver(:this:by_item_type == 0);
		    path="/sys/cmp/smart_field.cmp";
		    field=a_payroll_item_type_code; 
		    ctl_type="dropdown";
		    tooltip="i18n:Line Item Type";
		    label_width=0;
		    sql=runserver("select :a_desc + ' - ' + :a_payroll_item_type_code  + ' (' + :a_payroll_item_class_code + ')', :a_payroll_item_type_code from /apps/kardia/data/Kardia_DB/a_payroll_item_type/rows where :a_ledger_number = " + quote(:this:ledger)); 
		    onchange "widget/connector" { event=DataChange; target=payitem_tab; action=SetTab; Tab=runclient(isnull(substring(:Label, charindex('(', :Label) + 1, 1), 'XX')); }
		    onchange2 "widget/connector" { event=DataChange; event_condition=runclient(charindex('(T)', :Label) > 0); target=f_t_status; action=SetItems; SQL=runclient("select label = :a_desc, value=:a_filing_status from /apps/kardia/data/Kardia_DB/a_tax_filingstatus/rows where :a_payroll_item_type_code = " + quote(:Value)); }
		    onchange3 "widget/connector" { event=DataChange; event_condition=runclient(charindex('(E)', :Label) > 0); target=f_e_status; action=SetItems; SQL=runclient("select label = :a_desc, value=:a_filing_status from /apps/kardia/data/Kardia_DB/a_tax_filingstatus/rows where :a_payroll_item_type_code = " + quote(:Value)); }
		    }
		}

	    payitem_tab "widget/tab"
		{
		x=226; y=328; width=544; height=150;
		tab_location=none;

		XX "widget/tabpage"
		    {
		    xx_lbl "widget/label" { x=4; y=64; width=536; height=20; style=italic; font_size=13; text="i18n:No type selected"; align=center; }
		    }

		// Available Funds
		A "widget/tabpage"
		    {
		    a_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; text="i18n:Available Funds:"; align=center; }

		    a_vbox "widget/vbox"
			{
			x=4;y=28;width=400;height=116;
			cellsize=20;
			spacing=4;

			f_a_costctr "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_ref_cost_center; text="i18n:Cost Ctr:"; ctl_type="dropdown"; tooltip="i18n:Subsidiary fund to source available funds from.  Leave blank to use the main fund."; label_width=100; }
			f_a_amt "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_target_amount; text="i18n:Required:"; ctl_type="editbox"; tooltip="i18n:Total amount required in fund for full pay"; label_width=100; }
			f_a_minamt "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_minimum_amount; text="i18n:Min. Left:"; ctl_type="editbox"; tooltip="i18n:Minimum to leave in fund"; label_width=100; }
			}
		    }

		// Pre-tax benefit (like health insurance)
		B "widget/tabpage"
		    {
		    b_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; text="i18n:Pre-Tax Benefit:"; align=center; }

		    b_vbox "widget/vbox"
			{
			x=4;y=28;width=300;height=116;
			cellsize=26;
			spacing=4;

			f_b_exp_acct "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_ref_account_code; text="i18n:Expense Acct:"; tooltip="i18n:GL Account for expense in this fund"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/accounts.qyt/" + :this:ledger + "/"); popup_text="i18n:Select Account:"; }
			f_b_xfer_cc "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_xfer_cost_center; text="i18n:Xfer Costctr:"; tooltip="i18n:Fund receiving benefit transfer"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/costctrs.qyt/" + :this:ledger + "/"); popup_text="i18n:Select Cost Center:"; }
			f_b_xfer_acct "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_xfer_account_code; text="i18n:Xfer Account:"; tooltip="i18n:GL Account for receiving fund"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/accounts.qyt/" + :this:ledger + "/"); popup_text="i18n:Select Account:"; }
			f_b_amt "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_target_amount; text="i18n:Amount:"; ctl_type="editbox"; tooltip="i18n:Amount to transfer."; label_width=100; }
			}
		    }

		// Post-tax deductions (e.g., same as V, except this is a fixed amount rather than clearing an account)
		D "widget/tabpage"
		    {
		    d_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; text="i18n:Post-Tax Deduction:"; align=center; }
		    d_vbox "widget/vbox"
			{
			x=4;y=28;width=300;height=116;
			cellsize=26;
			spacing=4;
			f_d_ref_acct "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_ref_account_code; text="i18n:Account:"; tooltip="i18n:GL Liability Account for payable"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/accounts.qyt/" + :this:ledger + "/"); popup_text="i18n:Select Account:"; }
			f_d_amt "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_target_amount; text="i18n:Amount:"; ctl_type="editbox"; tooltip="i18n:Amount of Deduction."; label_width=100; }
			}
		    }

		// Employer side Taxes
		E "widget/tabpage"
		    {
		    e_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; text="i18n:Employer Tax:"; align=center; }
		    e_vbox "widget/vbox"
			{
			x=4;y=28;width=300;height=116;
			cellsize=26;
			spacing=4;

			f_e_acct "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_ref_account_code; text="i18n:GL Account:"; tooltip="i18n:GL Account for taxes (typ. a liability acct)"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/accounts.qyt/" + :this:ledger + "/"); popup_text="i18n:Select Account:"; }
			f_e_amt "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_target_amount; text="i18n:Amount:"; ctl_type="editbox"; tooltip="i18n:Amount of Tax."; label_width=100; }
			}
		    e_vbox2 "widget/vbox"
			{
			x=312;y=28;width=200;height=116;
			cellsize=26;
			spacing=4;
			f_e_status "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_filing_status; text="i18n:Status:"; ctl_type="dropdown"; tooltip="i18n:Filing status of payee."; label_width=100; }
			f_e_allow "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_allowances; text="i18n:Allowances:"; ctl_type="editbox"; tooltip="i18n:Number of allowances claimed by payee."; label_width=100; }
			f_e_depallow "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_dependent_allowances; text="i18n:Dep. Allow.:"; ctl_type="editbox"; tooltip="i18n:Number of dependent allowances claimed by payee (some states)."; label_width=100; }
			}
		    }

		// Gross pay
		G "widget/tabpage"
		    {
		    g_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; value=runclient("Gross Pay" + isnull(" (" + :f_typ:value + ")", "") + ":"); align=center; }
		    g_vbox "widget/vbox"
			{
			x=4;y=28;width=300;height=116;
			cellsize=26;
			spacing=4;
			f_g_amt "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_target_amount; text="i18n:Gross:"; ctl_type="editbox"; tooltip="i18n:Gross Pay"; label_width=100; }
			f_g_minamt "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_minimum_amount; text="i18n:Minimum:"; ctl_type="editbox"; tooltip="i18n:Minimum Gross Pay (if available funds are insufficient)"; label_width=100; }
			}
		    }

		// Informational
		I "widget/tabpage"
		    {
		    i_lbl "widget/label" { x=4; y=64; width=536; height=20; font_size=13; text="i18n:(No further information needed)"; align=center; }
		    }

		// Non-tax payables (e.g., expense reimbursements)
		M "widget/tabpage"
		    {
		    m_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; text="i18n:Non-Tax Payable:"; align=center; }
		    m_vbox "widget/vbox"
			{
			x=4;y=28;width=300;height=116;
			cellsize=26;
			spacing=4;

			f_m_ref_cc "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_ref_cost_center; text="i18n:Cost ctr:"; tooltip="i18n:Cost center holding payable"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/costctrs.qyt/" + :this:ledger + "/"); popup_text="i18n:Select Cost Center:"; }
			f_m_ref_acct "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_ref_account_code; text="i18n:Account:"; tooltip="i18n:GL Liability Account for payable"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/accounts.qyt/" + :this:ledger + "/"); popup_text="i18n:Select Account:"; }
			}
		    }

		// Net pay
		N "widget/tabpage"
		    {
		    n_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; text="i18n:Net Pay:"; align=center; }
		    n_vbox "widget/vbox"
			{
			x=4;y=28;width=300;height=116;
			cellsize=26;
			spacing=4;

			n_lbl_2 "widget/label" { text = "i18n:(no settings for net pay; this is computed)"; }
			}
		    }

		// Pre-Payroll Transaction (such as vehicle fund xfer)
		P "widget/tabpage"
		    {
		    p_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; text="i18n:Pre-Payroll Transaction:"; align=center; }

		    p_vbox "widget/vbox"
			{
			x=4;y=28;width=300;height=116;
			cellsize=26;
			spacing=4;

			f_p_exp_acct"widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_ref_account_code; text="i18n:Expense Acct:"; tooltip="i18n:GL Account for expense in this fund"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/accounts.qyt/" + :this:ledger + "/"); popup_text="i18n:Select Account:"; }
			f_p_xfer_cc "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_xfer_cost_center; text="i18n:Xfer Costctr:"; tooltip="i18n:Receiving fund's cost center"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/costctrs.qyt/" + :this:ledger + "/"); popup_text="i18n:Select Cost Center:"; }
			f_p_xfer_acct"widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_xfer_account_code; text="i18n:Xfer Account:"; tooltip="i18n:GL Account for receiving fund"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/accounts.qyt/" + :this:ledger + "/"); popup_text="i18n:Select Account:"; }
			f_p_amt "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_target_amount; text="i18n:Amount:"; ctl_type="editbox"; tooltip="i18n:Amount to transfer."; label_width=100; }
			}
		    }

		// Pre-Tax Receivables
		R "widget/tabpage"
		    {
		    r_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; text="i18n:Pre-Tax Receivable:"; align=center; }
		    r_vbox "widget/vbox"
			{
			x=4;y=28;width=300;height=116;
			cellsize=26;
			spacing=4;

			f_r_ref_cc "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_ref_cost_center; text="i18n:Cost ctr:"; tooltip="i18n:Cost center holding receivable"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/costctrs.qyt/" + :this:ledger + "/"); popup_text="i18n:Select Cost Center:"; }
			f_r_ref_acct "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_ref_account_code; text="i18n:Account:"; tooltip="i18n:GL Asset Account for receivable"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/accounts.qyt/" + :this:ledger + "/"); popup_text="i18n:Select Account:"; }
			}
		    }

		// Tax Withholdings
		T "widget/tabpage"
		    {
		    t_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; text="i18n:Tax Withholding:"; align=center; }
		    t_vbox "widget/vbox"
			{
			x=4;y=28;width=300;height=116;
			cellsize=26;
			spacing=4;

			f_t_acct "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_ref_account_code; text="i18n:GL Account:"; tooltip="i18n:GL Account for taxes (typ. a liability acct)"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/accounts.qyt/" + :this:ledger + "/"); popup_text="i18n:Select Account:"; }
			f_t_amt "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_target_amount; text="i18n:Amount:"; ctl_type="editbox"; tooltip="i18n:Amount of Tax."; label_width=100; }
			}
		    t_vbox2 "widget/vbox"
			{
			x=312;y=28;width=200;height=116;
			cellsize=26;
			spacing=4;
			f_t_status "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_filing_status; text="i18n:Status:"; ctl_type="dropdown"; tooltip="i18n:Filing status of payee."; label_width=100; }
			f_t_allow "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_allowances; text="i18n:Allowances:"; ctl_type="editbox"; tooltip="i18n:Number of allowances claimed by payee."; label_width=100; }
			f_t_depallow "widget/component" { path="/sys/cmp/smart_field.cmp"; field=a_dependent_allowances; text="i18n:Dep. Allow.:"; ctl_type="editbox"; tooltip="i18n:Number of dependent allowances claimed by payee (some states)."; label_width=100; }
			}
		    }

		// Post-tax receivables (e.g., salary advances that need to be taxed)
		V "widget/tabpage"
		    {
		    v_lbl "widget/label" { x=4; y=0; width=536; height=20; style=bold; font_size=13; text="i18n:Post-Tax Receivable:"; align=center; }
		    v_vbox "widget/vbox"
			{
			x=4;y=28;width=300;height=116;
			cellsize=26;
			spacing=4;
			f_v_ref_acct "widget/component" { path="/apps/kardia/modules/base/editbox_tree.cmp"; field=a_ref_account_code; text="i18n:Account:"; tooltip="i18n:GL Asset Account for receivable"; label_width=100; popup_source = runserver("/apps/kardia/modules/gl/accounts.qyt/" + :this:ledger + "/"); popup_text="i18n:Select Account:"; }
			}
		    }
		}

	    payee_rec_info "widget/component"
		{
		x=8;y=497;height=20;width=762;
		path = "/apps/kardia/modules/base/record_metadata_bar.cmp";
		}
	    }
	}
    }

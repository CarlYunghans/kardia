$Version=2$
pay_form "widget/component-decl"
    {
    width=758;
    height=620;

    ledger "widget/parameter" { type=string; default=null; allowchars="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"; }
    period "widget/parameter" { type=string; default=null; }
    ref_period "widget/parameter" { type=string; default=null; }
    costctr "widget/parameter" { type=string; default=null; }
    group_id "widget/parameter" { type=integer; default=null; }
    payroll_id "widget/parameter" { type=integer; default=null; }
    payee_name "widget/parameter" { type=string; default=null; }
    payee_data_osrc "widget/parameter" { type=object; }

    outer_cmp "widget/parameter" { type=object; find_container="widget/component-decl"; }

    // This is used to resync the various computed fields when a change is signaled.
    // It is called by connectors using the TriggerEvent action on pay_form.
    // Other connectors listen for it and trigger actions on their respective data.
    ItemChanged "widget/component-decl-action" { }

//    Recalc "widget/component-decl-action" {}

    form_vbox "widget/vbox"
	{
	x=0; y=0; width=758; height=580;
	spacing=2;

	//title_lbl "widget/label" { height=24; font_size=15; style=bold; align=center; value=runclient(:payee_data_osrc:ptxt); }
	title_lbl "widget/label" { height=20; font_size=15; style=bold; align=center; value=runserver('Payee ' + :this:payee_name + ' - Period ' + :this:period); }

	ob_hbox "widget/hbox"
	    {
	    height=18;
	    spacing=8;

	    ob_label "widget/label"
		{
		style=bold; width=160; align=right;
		text = "i18n:Opening Balance:";
		}
	    
	    ob_osrc "widget/osrc"
		{
		replicasize=2;
		readahead=2;
		autoquery=onload;
		ob_period "widget/parameter" { param_name=period; type=string; default=runserver(:this:period); }
		sql = runserver("select total = isnull($0 - sum(:t:a_amount),$0) FROM /apps/kardia/data/Kardia_DB/a_transaction/rows t WHERE :t:a_ledger_number = " + quote(:this:ledger) + " and ((:t:a_period == " + quote(:this:period) + " and :t:a_transaction_type = 'B') or (:t:a_period < " + quote(:this:period) + ")) and :t:a_period >= " + quote(:this:ref_period) + " and :t:a_cost_center = " + quote(:this:costctr) + " and :t:a_account_code >= '3000' and :t:a_account_code <= '5999'");
		//sql = runserver("select total = isnull($0 - sum(:t:a_amount),$0) FROM /apps/kardia/data/Kardia_DB/a_transaction/rows t WHERE :t:a_ledger_number = " + quote(:this:ledger) + " and ((:t:a_period == :parameters:period and :t:a_transaction_type = 'B') or (:t:a_period < :parameters:period)) and :t:a_period >= " + quote(:this:ref_period) + " and :t:a_cost_center = " + quote(:this:costctr) + " and :t:a_account_code >= '3000' and :t:a_account_code <= '5999'");

		ob_form "widget/form"
		    {
		    ob_value "widget/label"
			{
			style=bold; width=80;
			fieldname = total;
			}
		    }
		}

	    ob_expl "widget/label"
		{
		width = 480;
		text = runserver(isnull("Balance is prior to beginning of payroll period " + :this:period, "(working with template/budget; no opening balance)"));
		}
	    }

	category_rp "widget/repeat"
	    {
	    sql = runserver("
		SELECT
			label = :ic:a_desc,
			codes = sum(:it:a_payroll_item_class_code),
			cnt = count(1)
		FROM
			/apps/kardia/data/Kardia_DB/a_payroll_item_type/rows it,
			/apps/kardia/data/Kardia_DB/a_payroll_item_class/rows ic,
			/apps/kardia/data/Kardia_DB/a_payroll_item/rows pi
		WHERE
			:it:a_payroll_item_class_code = :ic:a_payroll_item_class_code and
			:it:a_ledger_number = " + quote(:this:ledger) + " and
			:pi:a_payroll_id = " + :this:payroll_id + " and
			:pi:a_payroll_group_id = " + :this:group_id + " and
			:pi:a_ledger_number = " + quote(:this:ledger) + " and
			:pi:a_payroll_item_type_code = :it:a_payroll_item_type_code and
			:it:a_payroll_item_form_sequence > 0 and
			" + condition(:this:period is null, ":pi:a_is_instance = 0 and :pi:a_period is null", ":pi:a_is_instance = 1 and :pi:a_period = " + quote(:this:period)) + "
		ORDER BY
			:it:a_payroll_item_form_sequence
		GROUP BY
			(:it:a_payroll_item_form_sequence / 10)
		HAVING
			:cnt > 0");

	    category_pane "widget/pane"
		{
		height=20; width=758;
		widget_class="label";
		border_color = "#153f5f";

		categorylbl_rp "widget/repeat"
		    {
		    sql = runserver("SELECT label = sum(:ic:a_desc + ', ') - ', '  FROM /apps/kardia/data/Kardia_DB/a_payroll_item_class/rows ic  WHERE charindex(:ic:a_payroll_item_class_code, " + quote(:category_rp:codes) + ") > 0  ORDER BY charindex(:ic:a_payroll_item_class_code, " + quote(:category_rp:codes) + ")");
		    category_lbl "widget/label"
			{
			x=4;y=1;width=400;height=18;
			//font_size = 13;
			widget_class="label";
			align=left;
			text = runserver(:categorylbl_rp:label);
			}
		    }
		}

	    form_item_rp "widget/repeat"
		{
		sql = runserver("
			SELECT
				descrip = :it:a_desc,
				code = :it:a_payroll_item_type_code,
				class_code = :it:a_payroll_item_class_code
			FROM
				/apps/kardia/data/Kardia_DB/a_payroll_item_type/rows it,
				/apps/kardia/data/Kardia_DB/a_payroll_item/rows pi
			WHERE
				charindex(:it:a_payroll_item_class_code, " + quote(:category_rp:codes) + ") > 0 and
				:it:a_ledger_number = " + quote(:this:ledger) + " and
				:pi:a_payroll_id = " + :this:payroll_id + " and
				:pi:a_payroll_group_id = " + :this:group_id + " and
				:pi:a_ledger_number = " + quote(:this:ledger) + " and
				:pi:a_payroll_item_type_code = :it:a_payroll_item_type_code and
				" + condition(:this:period is null, ":pi:a_is_instance = 0 and :pi:a_period is null", ":pi:a_is_instance = 1 and :pi:a_period = " + quote(:this:period)) + "
			ORDER BY
				:it:a_payroll_item_form_sequence");

		form_item_cmp "widget/component"
		    {
		    height = 18;
		    path = "/apps/kardia/modules/payroll/pay_form_item.cmp";
		    ledger = runserver(:this:ledger);
		    period = runserver(:this:period);
		    ref_period = runserver(:this:ref_period);
		    payroll_id = runserver(:this:payroll_id);
		    group_id = runserver(:this:group_id);
		    type_code = runserver(:form_item_rp:code);
		    class_code = runserver(:form_item_rp:class_code);
		    item_desc = runserver(:form_item_rp:descrip);
		    costctr = runserver(:this:costctr);
		    }
		}
	    cat_sep "widget/autolayoutspacer" { height=2; }
	    }

	ttl_sep_line "widget/pane"
	    {
	    height=2;
	    style=lowered;
	    }

	oth_osrc "widget/osrc"
	    {
	    replicasize=2;
	    readahead=2;
	    autoquery=onload;

	    // BUG BUG - add date constraint to this to filter out payroll records no longer active.
	    // GRB - added note - is date constraint needed, given that there is a period constraint on pay_item?
	    sql = runserver("
		select
			total = isnull(sum(condition(charindex(:it:a_payroll_item_class_code, 'GEBP') > 0, :i:a_actual_amount, $0)),$0)
		FROM
			/apps/kardia/data/Kardia_DB/a_payroll/rows y,
			/apps/kardia/data/Kardia_DB/a_payroll_item/rows i,
			/apps/kardia/data/Kardia_DB/a_payroll_item_type/rows it
		WHERE
			:it:a_ledger_number = " + quote(:this:ledger) + " and
			" + condition(:this:period is null, ":i:a_is_instance = 0 and :i:a_period is null", ":i:a_is_instance = 1 and :i:a_period = " + quote(:this:period)) + " and
			:y:a_cost_center = " + quote(:this:costctr) + " and
			:y:a_payroll_id != " + :this:payroll_id + " and
			:y:a_payroll_group_id = " + :this:group_id + " and
			:y:a_ledger_number = " + quote(:this:ledger) + " and
			:i:a_payroll_id = :y:a_payroll_id and
			:i:a_payroll_group_id = :y:a_payroll_group_id and
			:i:a_ledger_number = :y:a_ledger_number and
			:it:a_payroll_item_type_code = :i:a_payroll_item_type_code
		");
//			/apps/kardia/data/Kardia_DB/a_period/rows p,
//			:p:a_ledger_number = " + quote(:this:period) + " and
//			:p:a_period = " + quote(:this:period) + " and
	    }

	oth_hbox "widget/hbox"
	    {
	    height=18;
	    spacing=8;

	    oth_label "widget/label"
		{
		style=bold; width=160; align=right;
		text = "i18n:Other Payees:";
		}

	    oth_value "widget/label"
		{
		style=bold; width=80;
		value = runclient(:oth_osrc:total);
		}

	    oth_expl "widget/label"
		{
		width=480;
		text = runserver("i18n:Gross Pay, Benefits, Xfers, and Employer Tax for Other(s) in " + :this:costctr);
		}
	    }

	ttl_osrc "widget/osrc"
	    {
	    replicasize=2;
	    readahead=2;
	    autoquery=onload;
	    // ending total = (starting balance) - (GEBP for current payee) - (GEBP for other payees)
	    // GEBP = gross + employer taxes + benefits + pre-payroll transactions
	    ttl_period "widget/parameter" { param_name=period; type=string; default=runserver(:this:period); }
	    ttl_ref_period "widget/parameter" { param_name=ref_period; type=string; default=runserver(:this:ref_period); }
	    sql = runserver("
		select
			total = (select isnull($0 - sum(:t:a_amount),$0)
					FROM /apps/kardia/data/Kardia_DB/a_transaction/rows t
					WHERE :t:a_ledger_number = " + quote(:this:ledger) + " and (:t:a_period <= " + quote(:this:period) + " or (:t:a_period == " + quote(:this:period) + " and :t:a_transaction_type = 'B')) and :t:a_period >= :parameters:ref_period and :t:a_cost_center = " + quote(:this:costctr) + " and :t:a_account_code >= '3000' and :t:a_account_code <= '5999' and (:t:a_origin != 'PP' or :t:a_period != :parameters:period)) -
				(select isnull(sum(condition(charindex(:it:a_payroll_item_class_code, 'GEBP') > 0, :i:a_actual_amount, $0)),$0)
					FROM /apps/kardia/data/Kardia_DB/a_payroll_item/rows i, /apps/kardia/data/Kardia_DB/a_payroll_item_type/rows it
					WHERE :it:a_ledger_number = " + quote(:this:ledger) + " and :i:a_period = :parameters:period and :i:a_payroll_id = " + :this:payroll_id + " and :i:a_payroll_group_id = " + :this:group_id + " and :i:a_ledger_number = " + quote(:this:ledger) + " and :it:a_payroll_item_type_code = :i:a_payroll_item_type_code) -
				(select isnull(sum(condition(charindex(:it:a_payroll_item_class_code, 'GEBP') > 0, :i:a_actual_amount, $0)),$0)
					FROM /apps/kardia/data/Kardia_DB/a_payroll/rows y, /apps/kardia/data/Kardia_DB/a_payroll_item/rows i, /apps/kardia/data/Kardia_DB/a_payroll_item_type/rows it
					WHERE :it:a_ledger_number = " + quote(:this:ledger) + " and :i:a_period = :parameters:period and :y:a_cost_center = " + quote(:this:costctr) + " and :y:a_payroll_id != " + :this:payroll_id + " and :y:a_payroll_group_id = " + :this:group_id + " and :y:a_ledger_number = " + quote(:this:ledger) + " and :i:a_payroll_id = :y:a_payroll_id and :i:a_payroll_group_id = :y:a_payroll_group_id and :i:a_ledger_number = :y:a_ledger_number and :it:a_payroll_item_type_code = :i:a_payroll_item_type_code)
		");

//				(select isnull(sum(condition(charindex(:it:a_payroll_item_class_code, 'GEBP') > 0, :i:a_actual_amount, $0)),$0)
//					FROM /apps/kardia/data/Kardia_DB/a_period/rows p, /apps/kardia/data/Kardia_DB/a_payroll/rows y, /apps/kardia/data/Kardia_DB/a_payroll_item/rows i, /apps/kardia/data/Kardia_DB/a_payroll_item_type/rows it
//					WHERE :p:a_ledger_number = " + quote(:this:period) + " and :p:a_period = " + quote(:this:period) + " and :it:a_ledger_number = " + quote(:this:ledger) + " and :i:a_period = " + quote(:this:period) + " and :y:a_cost_center = " + quote(:this:costctr) + " and :y:a_payroll_id != " + :this:payroll_id + " and :i:a_payroll_id = :y:a_payroll_id and :it:a_payroll_item_type_code = :i:a_payroll_item_type_code)

	    ItemChanged_cn "widget/connector"
		{
		source = pay_form;
		event = ItemChanged;
		event_condition = runclient(charindex(:Class, "GEBP") > 0);
		action = Refresh;
		}
	    }

	ttl_hbox "widget/hbox"
	    {
	    height=18;
	    spacing=8;

	    ttl_label "widget/label"
		{
		style=bold; width=160; align=right;
		text = "i18n:Ending Balance:";
		}

	    ttl_value "widget/label"
		{
		style=bold; width=80;
		value = runclient(:ttl_osrc:total);
		}

	    ttl_expl "widget/label"
		{
		width=480;
		text = "i18n:OPENBAL + {GL DON} - {GL EXP} - ETAX - XFERS - BENEFITS - GROSS";
		}
	    }
	}
    }

$Version=2$
payroll_run "widget/component-decl"
    {
    width=758; height=565;
    ledger "widget/parameter" { type=string; default=null; allowchars="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"; }

    container "widget/parameter" { type=object; find_container="widget/page"; }

    pay_form "widget/parameter" { type=object; }

    Done "widget/component-decl-event" {}

    ledger_osrc "widget/osrc"
	{
	sql = runserver("select * from /apps/kardia/data/Kardia_DB/a_ledger/rows where :a_ledger_number = " + quote(:this:ledger));
	baseobj = "/apps/kardia/data/Kardia_DB/a_ledger/rows";
	autoquery=onload;
	replicasize=2;
	readahead=1;
	}

    // Window for posting the batch.
    bpwin "widget/component"
	{
	width=748; height=515; x=0; y=0;
	mode=static;
	path="/apps/kardia/modules/gl/batch_post_window.cmp";
	toplevel = yes;

	//posted_cn "widget/connector"
	//    {
	//    event=Posted;
	//    target=trx_osrc;
	//    action=Refresh;
	//    }

	post_done_cn "widget/connector"
	    {
	    event=Done;
	    target=bpwin;
	    action=Close;
	    }
	}

    tasklist_vbox "widget/vbox"
	{
	x=0;y=0;width=160;height=505;cellsize=44;spacing=12;

	tasklist_hdr_lbl "widget/label"
	    {
	    height=32;
	    font_size=13;
	    align=center;
	    style=bold;
	    text="Run Payroll Tasks:";
	    }

	tasklist_rpt "widget/repeat"
	    {
	    sql = "select id=substring(:tag, 2, 1), :text from /apps/kardia/data/Kardia_DB/_s_process/rows where substring(:tag, 1, 1) = 'P' order by :tag";

	    tasklist_item_pane "widget/pane"
		{
		widget_class="label";
		enabled = runclient(:tasklist_tab:selected_index == runserver(:tasklist_rpt:id));
		width=160; height=44;
		border_color = "#153f5f";

		tasklist_item_lbl "widget/label"
		    {
		    x=4;y=0;width=150;height=42;
		    font_size = 13;
		    widget_class="label";
		    align=center;
		    valign=middle;
		    text = runserver(:tasklist_rpt:text);
		    }
		}
	    }

	sep_spacer "widget/autolayoutspacer" { height=2; }
	sep_line "widget/pane" { style=lowered; height=3; fl_height=0; }

	context_hdr_lbl "widget/label"
	    {
	    height=32;
	    font_size=13;
	    align=center;
	    style=bold;
	    text="Settings:";
	    }

	grp_lbl "widget/label"
	    {
	    height=16;
	    value = runclient("Group: " + isnull(:group_osrc:a_payroll_group_name, '(not selected)'));
	    }

	per_lbl "widget/label"
	    {
	    height=16;
	    value = runclient("Period: " + isnull(:period_osrc:a_period_desc, '(not selected)'));
	    }
	}

    tasklist_tab "widget/tab"
	{
	x=172;y=0;width=586;height=565;
	tab_location=none;
	background="/apps/kardia/images/bg/light_bgnd2.jpg";

	task_sel_period "widget/tabpage"
	    {
	    ttl_lbl "widget/label" { x=8;y=8;width=100;height=20; text="Step One:"; style=bold; }
	    desc_lbl "widget/label" { x=8;y=28;width=568;height=80; text="Select a group and a period to process payroll for.  We will be working with payroll records that are created specifically for this accounting period, and which can be modified to suit the needs and circumstances of this period."; }

	    group_osrc "widget/osrc"
		{
		sql = runserver("
			select
				:a_ledger_number,
				:a_payroll_group_name,
				:a_payroll_group_id
			from
				/apps/kardia/data/Kardia_DB/a_payroll_group/rows
			where
				:a_ledger_number = " + quote(:this:ledger) + "
			");
		baseobj = "/apps/kardia/data/Kardia_DB/a_payroll_group/rows";
		autoquery = onload;
		replicasize=10;
		readahead=10;

		group_sel_dd "widget/dropdown"
	            {
		    x=20; y=110; width=200; height=20;
		    mode = objectsource;
		    fieldname=a_payroll_group_name;
		    }
		}

	    period_osrc "widget/osrc"
		{
		//sql = runserver("select a_ref_period = (select first(:p2:a_period) from /apps/kardia/data/Kardia_DB/a_period/rows p2 where :p2:a_parent_period = :p:a_parent_period and :p2:a_ledger_number = :p:a_ledger_number), :p:a_period, :p:a_period_desc, cnt = count(:i:a_payroll_id), glcnt = (select count(1) from /apps/kardia/data/Kardia_DB/a_batch/rows t where :t:a_period = :p:a_period and :t:a_origin = 'PP' and :t:a_ledger_number = " + quote(:this:ledger) + ") from /apps/kardia/data/Kardia_DB/a_period/rows p, /apps/kardia/data/Kardia_DB/a_payroll_item/rows i where :p:a_summary_only = 0 and :i:a_period =* :p:a_period  group by :p:a_period");
		sql = runserver("
			select
				a_ref_period = null,
				a_period = null,
				prev_period = null,
				a_period_desc = 'Budget / Template',
				a_end_date = null,
				cnt = (select count(1) from /apps/kardia/data/Kardia_DB/a_payroll_item/rows i where :i:a_period is null),
				glcnt = 0
				;
			select 
				a_ref_period = (select first(:p2:a_period) from /apps/kardia/data/Kardia_DB/a_period/rows p2 where :p2:a_parent_period = :p:a_parent_period and :p2:a_ledger_number = :p:a_ledger_number), 
				:p:a_period,
				prev_period = (select max(:p3:a_period) from /apps/kardia/data/Kardia_DB/a_period/rows p3 where :p3:a_summary_only = 0 and :p3:a_ledger_number = :p:a_ledger_number and :p3:a_period < :p:a_period),
				:p:a_period_desc,
				:p:a_end_date,
				cnt = count(:i:a_payroll_id),
				glcnt = isnull( (select 1 from /apps/kardia/data/Kardia_DB/a_batch/rows t where :t:a_period = :p:a_period and :t:a_origin = 'PP' and :t:a_ledger_number = :p:a_ledger_number limit 1), 0)
			from 
				/apps/kardia/data/Kardia_DB/a_period/rows p,
				/apps/kardia/data/Kardia_DB/a_payroll_item/rows i
			where 
				:p:a_summary_only = 0 and
				:i:a_period =* :p:a_period and
				:i:a_ledger_number =* :p:a_ledger_number
			group by
				:p:a_period
			-- order by
			--	:p:a_period desc
			");
		//sql = runserver("select a_ref_period = (select first(:p2:a_period) from /apps/kardia/data/Kardia_DB/a_period/rows p2 where :p2:a_parent_period = :p:a_parent_period and :p2:a_ledger_number = :p:a_ledger_number), :p:a_period, :p:a_period_desc, cnt = count(:i:a_payroll_id)  from /apps/kardia/data/Kardia_DB/a_period/rows p, /apps/kardia/data/Kardia_DB/a_payroll_item/rows i where :p:a_summary_only = 0 and :i:a_period =* :p:a_period  group by :p:a_period");
		replicasize=84;
		readahead=12;
		autoquery=never;

		ledger_sync "widget/rule"
		    {
		    ruletype = "osrc_relationship";
		    target = ledger_osrc;
		    key_objname = p;
		    key_1 = a_ledger_number;
		    target_key_1 = a_ledger_number;
		    autoquery = true;
		    }

		group_sync "widget/rule"
		    {
		    ruletype = "osrc_relationship";
		    target = group_osrc;
		    key_objname = i;
		    key_1 = a_payroll_group_id;
		    target_key_1 = a_payroll_group_id;
		    autoquery = true;
		    }

		period_form "widget/form" { }

		per_tbl "widget/table"
		    {
		    x=20;y=140;width=544;height=338;
		    mode=dynamicrow;

		    t_per "widget/table-column" { title="Period"; fieldname="a_period"; width=80; }
		    t_desc "widget/table-column" { title="Description"; fieldname="a_period_desc"; width=240; }
		    t_rcnt "widget/table-column" { title="Records"; fieldname="cnt"; width=80; type=check; }
		    t_glcnt "widget/table-column" { title="GL Records"; fieldname="glcnt"; width=80; type=check; }
		    }
		}

	    sep "widget/pane" { x=8; y=520; height=2; width=568; style=lowered; }
	    btn_back "widget/textbutton" { x=368; y=530; width=100; text="<< Back"; enabled=runclient(0); }
	    btn_next "widget/textbutton" 
		{
		x=476; y=530; width=100;
		text="Next >>";

		next_cn "widget/connector" { event=Click; target=tasklist_tab; action=SetTab; TabIndex=runclient(condition(char_length(:period_osrc:a_period) > 0, 2, 3)); }
		}
	    }
	
	task_create_rec "widget/tabpage"
	    {
	    task_create_vbox "widget/vbox"
		{
		x=8; y=8; width=568; height=500;
		spacing=4;

		ttl2_lbl "widget/label" { height=20; text="Step Two:"; style=bold; }
		desc2_lbl "widget/label" { height=40; text="You can create a new set of payroll data records for this period, or if records already exist that you want to delete or update balances for, you can do that here."; }

		whichperiod_lbl "widget/component" { height=20; path="/sys/cmp/smart_field.cmp"; text="Payroll Period:"; form=period_form; field=a_period_desc; ctl_type=label; label_width=160; }

		payrollcnt_osrc "widget/osrc"
		    {
		    pc_a_ledger_number "widget/parameter" { default=runclient(:ledger_osrc:a_ledger_number); }
		    pc_a_period "widget/parameter" { default=runclient(:period_osrc:a_period); }
		    sql = runserver("
				SELECT
					txt = (select condition(count(1) > 0, 'Yes', 'No')  FROM /apps/kardia/data/Kardia_DB/a_payroll_item/rows pi, /apps/kardia/data/Kardia_DB/a_payroll/rows p  WHERE :pi:a_payroll_id = :p:a_payroll_id and :p:a_ledger_number = :parameters:pc_a_ledger_number and :pi:a_period = :parameters:pc_a_period and :pi:a_is_instance = 1 limit 1),
					gltxt = (select condition(count(1) > 0, 'Yes', 'No') FROM /apps/kardia/data/Kardia_DB/a_transaction/rows t WHERE :t:a_period = :parameters:pc_a_period and :t:a_origin = 'PP' and :t:a_ledger_number = :parameters:pc_a_ledger_number limit 1)
				");
		    autoquery=oneachreveal;
		    replicasize=2;
		    readahead=1;

		    payrollcnt_form "widget/form"
			{
			hasrecs_lbl "widget/component" { height=20;text="Records Present:"; path="/sys/cmp/smart_field.cmp"; ctl_type=label; field=txt; label_width=160; }
			hasglrecs_lbl "widget/component" { height=20;text="GL Data Present:"; path="/sys/cmp/smart_field.cmp"; ctl_type=label; field=gltxt; label_width=160; }
			}
		    }

		delete_recs_osrc "widget/osrc"
		    {
		    dr_a_ledger_number "widget/parameter" { default=runclient(:ledger_osrc:a_ledger_number); }
		    dr_a_period "widget/parameter" { default=runclient(:period_osrc:a_period); }
		    sql = "DELETE /apps/kardia/data/Kardia_DB/a_payroll_item/rows pi  FROM /apps/kardia/data/Kardia_DB/a_payroll/rows p  WHERE :p:a_payroll_id = :pi:a_payroll_id and :pi:a_is_instance = 1 and :p:a_ledger_number = :parameters:dr_a_ledger_number and :pi:a_period = :parameters:dr_a_period";
		    replicasize=2;
		    readahead=1;
		    autoquery = never;

		    delete_end "widget/connector" { event=EndQuery; target=payrollcnt_osrc; action=Refresh; }
		    }

		create_recs_component "widget/component"
		    {
		    x=0; y=0; width=1; height=1;
		    visual = no;
		    path = "/apps/kardia/modules/payroll/init_payroll.cmp";
		    create_end "widget/connector" { event=Initialized; target=payrollcnt_osrc; action=Refresh; }
		    update_end "widget/connector" { event=Updated; target=payrollcnt_osrc; action=Refresh; }
		    }

		create_sep "widget/autolayoutspacer" { height=16; }
		create_hdr "widget/label" { height=20; text="Create Period:"; style=bold; }
		create_line "widget/pane" { height=2; style=lowered; }
		create_lbl "widget/label" { height=40; value=runclient(condition(:payrollcnt_form:txt == 'No', "Click the button below to create a new set of payroll records for all cost centers, based on the payroll data for the period selected below.", "Records are already present.  If you want to re-create records, you will have to delete them first (see below).")); }

		lastperiod_hbox "widget/hbox"
		    {
		    height=20; spacing=4;
		    lastperiod_lbl "widget/label" { width=160; text="Create Based On:"; align=right; }
		    lastperiod_dd "widget/dropdown"
			{
			width=200;
			mode = dynamic_server;
			sql = runserver("select label = :a_period + ' - ' + :a_period_desc, value = :a_period from /apps/kardia/data/Kardia_DB/a_period/rows where :a_ledger_number = " + quote(:this:ledger) + " order by :a_start_date desc");

			select_last_per "widget/connector"
			    {
			    source = period_osrc;
			    event = DataFocusChanged;
			    action = SetItems;
			    SQL = runclient("select label = :p:a_period + ' - ' + :p:a_period_desc, value = :p:a_period, selected = (:p:a_period == (select max(:p2:a_period) from /apps/kardia/data/Kardia_DB/a_period/rows p2 where :p2:a_ledger_number = :p:a_ledger_number and :p2:a_summary_only = 0 and :p2:a_period < " + quote(:period_osrc:a_period) + ")) from /apps/kardia/data/Kardia_DB/a_period/rows p where :p:a_ledger_number = " + quote(:ledger_osrc:a_ledger_number) + " and :p:a_summary_only = 0 order by :p:a_start_date desc");
			    }
			}

		    create_btn "widget/textbutton"
			{
			width=100; height=20;
			text = "Create";
			enabled = runclient(:payrollcnt_form:txt == 'No');
			create_cn "widget/connector"
			    {
			    event=Click;
			    target=create_recs_component;
			    action=InitPayroll;
			    a_ledger_number = runclient(:ledger_osrc:a_ledger_number);
			    a_payroll_group_id = runclient(:group_osrc:a_payroll_group_id);
			    payperiod = runclient(:period_osrc:a_period);
			    paydate = runclient(:period_osrc:a_end_date);
			    payrefperiod = runclient(:period_osrc:a_ref_period);
			    paylastperiod = runclient(:lastperiod_dd:value);
			    }
			}
		    }

		update_sep "widget/autolayoutspacer" { height=16; }
		update_hdr "widget/label" { height=20; text="Update Balances and Accruals from the GL:"; style=bold; }
		update_line "widget/pane" { height=2; style=lowered; }
		update_lbl "widget/label" { height=40; value=runclient(condition(:payrollcnt_form:txt == 'Yes', condition(:period_osrc:glcnt == 0, "Click the button below to update the balances and accruals for " + :period_osrc:a_period_desc + " from the GL.","This period has already been posted to the GL.  You can't update records that have already been posted."), "No records are present to update.")); }
		update_btn "widget/textbutton"
		    {
		    x=242; width=100; height=20; text = "Update";
		    enabled = runclient(:payrollcnt_form:txt == 'Yes' and :period_osrc:glcnt == 0);
		    update_cn "widget/connector"
			{
			event=Click;
			event_confirm=runclient("This will update the balances and accruals in the payroll records for this period from the GL, including balances, expenses, and revenues for the month, as well as payable and receivable totals.  Do you really want to update balances and accruals for " + :period_osrc:a_period_desc + " from the GL in all cost centers?");
			target=create_recs_component;
			action=UpdatePayroll;
			a_ledger_number = runclient(:ledger_osrc:a_ledger_number);
			a_payroll_group_id = runclient(:group_osrc:a_payroll_group_id);
			payperiod = runclient(:period_osrc:a_period);
			paydate = runclient(:period_osrc:a_end_date);
			payrefperiod = runclient(:period_osrc:a_ref_period);
			}
		    }

		delete_sep "widget/autolayoutspacer" { height=16; }
		delete_hdr "widget/label" { height=20; text="Delete Period:"; style=bold; }
		delete_line "widget/pane" { height=2; style=lowered; }
		delete_lbl "widget/label" { height=40; value=runclient(condition(:payrollcnt_form:txt == 'Yes', condition(:period_osrc:glcnt == 0, "Click the button below to delete all payroll records for " + :period_osrc:a_period_desc + " in all cost centers.","This period has already been posted to the GL.  You can't delete records that have already been posted."), "No records are present to delete.")); }
		delete_btn "widget/textbutton"
		    {
		    x=242; width=100; height=20; text = "Delete";
		    enabled = runclient(:payrollcnt_form:txt == 'Yes' and :period_osrc:glcnt == 0);
		    delete_cn "widget/connector"
			{
			event=Click;
			event_confirm=runclient("Do you really want to delete all payroll records for " + :period_osrc:a_period_desc + " in all cost centers?");
			target=delete_recs_osrc;
			action=QueryParam;
			}
		    }
		}



	    sep2 "widget/pane" { x=8; y=520; height=2; width=568; style=lowered; }
	    btn2_back "widget/textbutton"
		{
		x=368; y=530; width=100;
		text="<< Back";

		back_cn2 "widget/connector" { event=Click; target=tasklist_tab; action=SetTab; TabIndex=1; }
		}
	    btn2_next "widget/textbutton"
		{
		x=476; y=530; width=100;
		text="Next >>";

		next_cn2 "widget/connector" { event=Click; target=tasklist_tab; action=SetTab; TabIndex=3; }
		}
	    }

	task_review_data "widget/tabpage"
	    {
	    ttl3_lbl "widget/label" { x=8;y=8;width=100;height=20; text="Step Three:"; style=bold; }
	    desc3_lbl "widget/label" { x=8;y=28;width=568;height=80; text="Here you can customize the payroll data to the needs of this payroll period, by adjusting transfers, withholding, gross pay, and more.  Double-click on a payee to review this period's payroll data for that payee."; }

	    payeelist_osrc "widget/osrc"
		{
		pl_a_ledger_number "widget/parameter" { default=runclient(:ledger_osrc:a_ledger_number); }
		//pl_a_period "widget/parameter" { default=runclient(:period_osrc:a_period); }
		sql = "select :p:a_payroll_group_id, :p:a_payroll_id, ptxt = condition(char_length(:p:a_payee_name) > 0, :p:a_payee_name, :par:p_surname + ', ' + :par:p_given_name), cctxt = '' + :p:a_cost_center + ' ' + :c:a_cc_desc, :p:a_cost_center, :p:a_payee_name, :c:a_cc_desc, cnt = count(1), netpay = sum(condition(:pit:a_payroll_item_class_code == 'N', :pi:a_actual_amount, $0)) from /apps/kardia/data/Kardia_DB/a_payroll/rows p, /apps/kardia/data/Kardia_DB/a_cost_center/rows c, /apps/kardia/data/Kardia_DB/a_payroll_item/rows pi, /apps/kardia/data/Kardia_DB/a_payroll_item_type/rows pit, /apps/kardia/data/Kardia_DB/p_partner/rows par  WHERE :p:a_ledger_number = :parameters:pl_a_ledger_number and :p:a_ledger_number = :c:a_ledger_number and :p:a_cost_center = :c:a_cost_center and :p:a_payroll_id = :pi:a_payroll_id and :pit:a_payroll_item_type_code = :pi:a_payroll_item_type_code and :pit:a_ledger_number = :parameters:pl_a_ledger_number and :par:p_partner_key = :p:p_payee_partner_key  GROUP BY substring(:p:a_payee_name, charindex(' ', :p:a_payee_name) + 1, 99), :p:a_payroll_id HAVING :cnt > 0 ";
		//sql = "select :p:a_payroll_id, ptxt = condition(char_length(:p:a_payee_name) > 0, :p:a_payee_name, :par:p_surname + ', ' + :par:p_given_name), cctxt = '' + :p:a_cost_center + ' ' + :c:a_cc_desc, :p:a_cost_center, :p:a_payee_name, :c:a_cc_desc, cnt = count(1), netpay = sum(condition(:pit:a_payroll_item_class_code == 'N', :pi:a_actual_amount, $0)) from /apps/kardia/data/Kardia_DB/a_payroll/rows p, /apps/kardia/data/Kardia_DB/a_cost_center/rows c, /apps/kardia/data/Kardia_DB/a_payroll_item/rows pi, /apps/kardia/data/Kardia_DB/a_payroll_item_type/rows pit, /apps/kardia/data/Kardia_DB/p_partner/rows par  WHERE :p:a_ledger_number = :parameters:pl_a_ledger_number and :p:a_ledger_number = :c:a_ledger_number and :p:a_cost_center = :c:a_cost_center and :p:a_payroll_id = :pi:a_payroll_id and :pi:a_is_instance = 1 and :pi:a_period = :parameters:pl_a_period and :pit:a_payroll_item_type_code = :pi:a_payroll_item_type_code and :pit:a_ledger_number = :parameters:pl_a_ledger_number and :par:p_partner_key = :p:p_payee_partner_key  GROUP BY substring(:p:a_payee_name, charindex(' ', :p:a_payee_name) + 1, 99), :p:a_payroll_id HAVING :cnt > 0 ";
		//sql = "select :p:a_payroll_id, ptxt = condition(char_length(:p:a_payee_name) > 0, :p:a_payee_name, :par:p_surname + ', ' + :par:p_given_name), cctxt = '' + :p:a_cost_center + ' ' + :c:a_cc_desc, :p:a_cost_center, :p:a_payee_name, :c:a_cc_desc, cnt = count(1), gross = sum(condition(:pit:a_payroll_item_class_code == 'G', :pi:a_actual_amount, $0)) from /apps/kardia/data/Kardia_DB/a_payroll/rows p, /apps/kardia/data/Kardia_DB/a_cost_center/rows c, /apps/kardia/data/Kardia_DB/a_payroll_item/rows pi, /apps/kardia/data/Kardia_DB/a_payroll_item_type/rows pit, /apps/kardia/data/Kardia_DB/p_partner/rows par  WHERE :p:a_ledger_number = :parameters:pl_a_ledger_number and :p:a_ledger_number = :c:a_ledger_number and :p:a_cost_center = :c:a_cost_center and :p:a_payroll_id = :pi:a_payroll_id and :pi:a_is_instance = 1 and :pi:a_period = :parameters:pl_a_period and :pit:a_payroll_item_type_code = :pi:a_payroll_item_type_code and :pit:a_ledger_number = :parameters:pl_a_ledger_number and :par:p_partner_key = :p:p_payee_partner_key  GROUP BY :p:a_cost_center, :p:a_payroll_id  HAVING :cnt > 0 ";
		replicasize=150;
		readahead=25;
		autoquery=oneachreveal;

		period_sync "widget/rule"
		    {
		    ruletype = "osrc_relationship";
		    target = period_osrc;
		    key_objname = pi;
		    key_1 = a_period;
		    target_key_1 = a_period;
		    revealed_only = true;
		    autoquery = false;
		    }

		group_sync2 "widget/rule"
		    {
		    condition = 0;
		    ruletype = "osrc_relationship";
		    target = group_osrc;
		    key_objname = p;
		    key_1 = a_payroll_group_id;
		    key_2 = a_ledger_number;
		    target_key_1 = a_payroll_group_id;
		    target_key_2 = a_ledger_number;
		    autoquery = true;
		    }

		payeelist_list "widget/table"
		    {
		    x=20;y=100;width=544;height=368;
		    mode=dynamicrow;

		    edit_cn3 "widget/connector"
			{
			event=DblClick;
			target=payroll_run;
			action=Launch;
			Name=runclient('pay_detail_window');
			Source=runclient('/apps/kardia/modules/payroll/pay_form.app');
			Multi=1;
			Width=800;
			Height=630;

			period = runclient(:period_osrc:a_period);
			ref_period = runclient(:period_osrc:a_ref_period);
			prev_period = runclient(:period_osrc:prev_period);
			ledger = runclient(:ledger_osrc:a_ledger_number);
			payrollid = runclient(:payeelist_osrc:a_payroll_id);
			groupid = runclient(:payeelist_osrc:a_payroll_group_id);
			}

//		    edit_cn2 "widget/connector"
//			{
//			event=DblClick;
//			target=pay_form;
//			action=ReviewPayee;
//			period = runclient(:period_osrc:a_period);
//			ref_period = runclient(:period_osrc:a_ref_period);
//			ledger = runclient(:ledger_osrc:a_ledger_number);
//			costctr = runclient(:payeelist_osrc:a_cost_center);
//			payroll_id = runclient(:payeelist_osrc:a_payroll_id);
//			group_id = runclient(:payeelist_osrc:a_payroll_group_id);
//			payee_name = runclient(:payeelist_osrc:ptxt);
//			payee_data_osrc = payeelist_osrc;
//			}

		    t_cc "widget/table-column" { title="Cost Center / Fund"; fieldname="cctxt"; width=180; }
		    t_payee "widget/table-column" { title="Payee"; fieldname="ptxt"; width=220; }
		    t_cnt "widget/table-column" { title="Recs"; fieldname="cnt"; width=50; }
		    t_netpay "widget/table-column" { title="Net Pay"; fieldname="netpay"; width=70; }
		    }
		}

	    edit_btn "widget/textbutton"
		{
		x=242; y=480; width=100; height=24; text = "Review Pay";
		//enabled = runclient(:payrollcnt_form:txt == 'Yes');
		edit_cn "widget/connector"
		    {
		    event=Click;
		    target=payroll_run;
		    action=Launch;
		    Name=runclient('pay_detail_window');
		    Source=runclient('/apps/kardia/modules/payroll/pay_form.app');
		    Multi=1;
		    Width=800;
		    Height=630;

		    period = runclient(:period_osrc:a_period);
		    ref_period = runclient(:period_osrc:a_ref_period);
		    prev_period = runclient(:period_osrc:prev_period);
		    ledger = runclient(:ledger_osrc:a_ledger_number);
		    payrollid = runclient(:payeelist_osrc:a_payroll_id);
		    groupid = runclient(:payeelist_osrc:a_payroll_group_id);

//		    target=pay_form;
//		    action=ReviewPayee;
//		    period = runclient(:period_osrc:a_period);
//		    ref_period = runclient(:period_osrc:a_ref_period);
//		    ledger = runclient(:ledger_osrc:a_ledger_number);
//		    costctr = runclient(:payeelist_osrc:a_cost_center);
//		    payroll_id = runclient(:payeelist_osrc:a_payroll_id);
//		    group_id = runclient(:payeelist_osrc:a_payroll_group_id);
//		    payee_name = runclient(:payeelist_osrc:ptxt);
//		    payee_data_osrc = payeelist_osrc;
		    }
		}

	    sep3 "widget/pane" { x=8; y=520; height=2; width=568; style=lowered; }
	    btn3_back "widget/textbutton" 
		{
		x=368; y=530; width=100;
		text="<< Back";

		back_cn3 "widget/connector" { event=Click; target=tasklist_tab; action=SetTab; TabIndex=runclient(condition(char_length(:period_osrc:a_period) > 0, 2, 1)); }
		}
	    btn3_next "widget/textbutton" 
		{
		x=476; y=530; width=100;
		text="Next >>";

		next_cn3 "widget/connector" { event=Click; target=tasklist_tab; action=SetTab; TabIndex=4; }
		}
	    }
	
	task_create_glbatch "widget/tabpage"
	    {
	    ttl4_lbl "widget/label" { x=8;y=8;width=100;height=20; text="Step Four:"; style=bold; }
	    desc4_lbl "widget/label" { x=8;y=28;width=568;height=80; text="Finally, the General Ledger (GL) batch for this payroll period needs to be created.  You may either post the batch directly here, or leave it unposted so you can review it first from the General Ledger module of Kardia."; }
	    sep4 "widget/pane" { x=8; y=520; height=2; width=568; style=lowered; }
	    btn4_back "widget/textbutton" 
		{
		x=368; y=530; width=100;
		text="<< Back";

		back_cn4 "widget/connector" { event=Click; target=tasklist_tab; action=SetTab; TabIndex=3; }
		}
	    btn4_next "widget/textbutton" 
		{
		x=476; y=530; width=100;
		text="Done";

		done_cn "widget/connector" { event=Click; target=container; action=Close; }
		}
	    }
	}
    }
